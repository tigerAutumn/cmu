<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.0.3.RELEASE</version>
    </parent>
    <artifactId>newex-push</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <name>newex-push</name>
    <description>newex-推送服务</description>
    <properties>
        <project.gitlab.group>https://gitlab.com/newex-dax</project.gitlab.group>
        <project.gitlab.url>git@gitlab.com:newex-dax/newex-push.git</project.gitlab.url>
        <docker.image.name>${project.parent.artifactId}</docker.image.name>
        <newex-dax.version>1.0.0-SNAPSHOT</newex-dax.version>
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-webflux</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-config</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-openfeign</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
        </dependency>
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>1.2.47</version>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>
        <dependency>
            <groupId>cc.newex.dax</groupId>
            <artifactId>newex-users-client</artifactId>
            <version>${newex-dax.version}</version>
        </dependency>
        <dependency>
            <groupId>cc.newex.dax</groupId>
            <artifactId>newex-market-client</artifactId>
            <version>${newex-dax.version}</version>
        </dependency>
        <dependency>
            <groupId>cc.newex.commons</groupId>
            <artifactId>newex-security-jwt</artifactId>
            <version>${newex-dax.version}</version>
        </dependency>
        <dependency>
            <groupId>cc.newex.commons</groupId>
            <artifactId>newex-dictionary</artifactId>
            <version>${newex-dax.version}</version>
        </dependency>
        <dependency>
            <groupId>cc.newex.dax</groupId>
            <artifactId>newex-portfolio-client</artifactId>
            <version>${newex-dax.version}</version>
        </dependency>
    </dependencies>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>Finchley.SR1</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <profiles>

        <profile>
            <id>prod</id>
            <properties>
                <props>src/main/filters/prod.properties</props>
            </properties>
        </profile>

    </profiles>
    <build>
        <finalName>${project.artifactId}-${project.version}</finalName>
        <filters>
            <filter>${props}</filter>
        </filters>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
            <resource>
                <directory>src/main/docker</directory>
                <filtering>true</filtering>
                <targetPath>${project.build.directory}</targetPath>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <fork>true</fork>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>dockerfile-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
</project>
