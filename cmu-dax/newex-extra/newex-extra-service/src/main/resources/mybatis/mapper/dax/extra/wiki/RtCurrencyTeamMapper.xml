<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cc.newex.dax.extra.data.wiki.RtCurrencyTeamRepository">
    <!-- CodeBuilder Generated -->
    <resultMap id="RtCurrencyTeamMap" type="cc.newex.dax.extra.domain.wiki.RtCurrencyTeam">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="cid" property="cid" jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="photo_url" property="photoUrl" jdbcType="VARCHAR"/>
        <result column="bio" property="bio" jdbcType="VARCHAR"/>
        <result column="bio_score" property="bioScore" jdbcType="INTEGER"/>
        <result column="created_date" property="createdDate" jdbcType="TIMESTAMP"/>
        <result column="modify_date" property="modifyDate" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Table_Name">
        rt_currency_team
    </sql>
    <sql id="Base_Column_List_Without_Id">
        cid
        ,
        name,
        photo_url,
        bio,
        bio_score,
        created_date,
        modify_date
    </sql>
    <sql id="Base_Column_List">
        id,
        <include refid="Base_Column_List_Without_Id"/>
    </sql>
    <sql id="Insert_Columns">
        <if test="record.cid != null">
            cid,
        </if>
        <if test="record.name != null">
            name,
        </if>
        <if test="record.photoUrl != null">
            photo_url,
        </if>
        <if test="record.bio != null">
            bio,
        </if>
        <if test="record.bioScore != null">
            bio_score,
        </if>
        <if test="record.createdDate != null">
            created_date,
        </if>
        <if test="record.modifyDate != null">
            modify_date,
        </if>
    </sql>
    <sql id="Insert_Values">
        <if test="record.cid != null">
            #{record.cid,jdbcType=VARCHAR},
        </if>
        <if test="record.name != null">
            #{record.name,jdbcType=VARCHAR},
        </if>
        <if test="record.photoUrl != null">
            #{record.photoUrl,jdbcType=VARCHAR},
        </if>
        <if test="record.bio != null">
            #{record.bio,jdbcType=VARCHAR},
        </if>
        <if test="record.bioScore != null">
            #{record.bioScore,jdbcType=INTEGER},
        </if>
        <if test="record.createdDate != null">
            #{record.createdDate,jdbcType=TIMESTAMP},
        </if>
        <if test="record.modifyDate != null">
            #{record.modifyDate,jdbcType=TIMESTAMP},
        </if>
    </sql>
    <sql id="Batch_Insert_Values">
        #{record.cid,jdbcType=VARCHAR}
        ,
        #{record.name,jdbcType=VARCHAR},
        #{record.photoUrl,jdbcType=VARCHAR},
        #{record.bio,jdbcType=VARCHAR},
        #{record.bioScore,jdbcType=INTEGER},
        #{record.createdDate,jdbcType=TIMESTAMP},
        #{record.modifyDate,jdbcType=TIMESTAMP},
    </sql>
    <sql id="Batch_Insert_Values_On_DuplicateKey">
        #{record.id,jdbcType=BIGINT},
        <include refid="Batch_Insert_Values"/>
    </sql>
    <sql id="Update_Set_From_Bean">
        <if test="record.cid != null">
            cid = #{record.cid,jdbcType=VARCHAR},
        </if>
        <if test="record.name != null">
            name = #{record.name,jdbcType=VARCHAR},
        </if>
        <if test="record.photoUrl != null">
            photo_url = #{record.photoUrl,jdbcType=VARCHAR},
        </if>
        <if test="record.bio != null">
            bio = #{record.bio,jdbcType=VARCHAR},
        </if>
        <if test="record.bioScore != null">
            bio_score = #{record.bioScore,jdbcType=INTEGER},
        </if>
        <if test="record.createdDate != null">
            created_date = #{record.createdDate,jdbcType=TIMESTAMP},
        </if>
        <if test="record.modifyDate != null">
            modify_date = #{record.modifyDate,jdbcType=TIMESTAMP},
        </if>
    </sql>
    <!-- insert -->
    <insert id="insert" parameterType="java.util.Map">
        <selectKey resultType="java.lang.Long" keyProperty="record.id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into
        <include refid="Table_Name"/>
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <include refid="Insert_Columns"/>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <include refid="Insert_Values"/>
        </trim>
    </insert>
    <insert id="batchInsert" parameterType="java.util.Map">
        insert into
        <include refid="Table_Name"/>
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <include refid="Base_Column_List_Without_Id"/>
        </trim>
        values
        <foreach collection="records" item="record" index="index" separator=",">
            <trim prefix="(" suffix=")" suffixOverrides=",">
                <include refid="Batch_Insert_Values"/>
            </trim>
        </foreach>
    </insert>
    <insert id="batchInsertOnDuplicateKey" parameterType="java.util.Map">
        insert into
        <include refid="Table_Name"/>
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <include refid="Base_Column_List"/>
        </trim>
        values
        <foreach collection="records" item="record" index="index" separator=",">
            <trim prefix="(" suffix=")" suffixOverrides=",">
                <include refid="Batch_Insert_Values_On_DuplicateKey"/>
            </trim>
        </foreach>
        ON DUPLICATE KEY UPDATE
        cid = VALUES(cid), name = VALUES(name), photo_url = VALUES(photo_url), bio = VALUES(bio), bio_score = VALUES(bio_score), created_date = VALUES(created_date), modify_date =
        VALUES(modify_date)
    </insert>
    <!-- end insert -->
    <!-- delete -->
    <delete id="deleteById" parameterType="java.util.Map">
        delete from
        <include refid="Table_Name"/>
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="java.util.Map">
        delete from
        <include refid="Table_Name"/>
        <if test="example != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <delete id="deleteIn" parameterType="java.util.Map">
        delete from
        <include refid="Table_Name"/>
        where id in
        <foreach collection="records" item="record" index="index" open="(" separator="," close=")">
            #{record.id,jdbcType=BIGINT}
        </foreach>
    </delete>
    <!-- end delete -->
    <!-- update -->
    <update id="updateById" parameterType="java.util.Map">
        update
        <include refid="Table_Name"/>
        <set>
            <include refid="Update_Set_From_Bean"/>
        </set>
        where id = #{record.id,jdbcType=BIGINT}
    </update>
    <update id="updateByExample" parameterType="java.util.Map">
        update
        <include refid="Table_Name"/>
        <set>
            <include refid="Update_Set_From_Bean"/>
        </set>
        <if test="example != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </update>
    <update id="batchUpdate" parameterType="java.util.Map">
        <foreach collection="records" item="record" index="index" open="" close="" separator=";">
            update
            <include refid="Table_Name"/>
            <set>
                <include refid="Update_Set_From_Bean"/>
            </set>
            where id = #{record.id,jdbcType=BIGINT}
        </foreach>
    </update>
    <!-- end update -->
    <!-- select -->
    <select id="selectById" parameterType="java.util.Map" resultMap="RtCurrencyTeamMap">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="Table_Name"/>
        where id = #{id,jdbcType=BIGINT}
    </select>
    <select id="selectByExample" resultMap="RtCurrencyTeamMap" parameterType="java.util.Map">
        select
        <if test="example != null and example.distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from
        <include refid="Table_Name"/>
        <if test="example != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="example != null and example.orderByClause != null">
            order by ${example.orderByClause}
        </if>
    </select>
    <select id="selectOneByExample" resultMap="RtCurrencyTeamMap" parameterType="java.util.Map">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="Table_Name"/>
        <if test="example != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="example != null and example.orderByClause != null">
            order by ${example.orderByClause}
        </if>
        limit 1
    </select>
    <select id="selectIn" resultMap="RtCurrencyTeamMap" parameterType="java.util.Map">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="Table_Name"/>
        where id in
        <foreach collection="records" item="record" index="index" open="(" separator="," close=")">
            #{record.id,jdbcType=BIGINT}
        </foreach>
    </select>
    <select id="countByExample" parameterType="java.util.Map" resultType="java.lang.Integer">
        select count(1) as total from
        <include refid="Table_Name"/>
        <if test="example != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <select id="countByPager" parameterType="java.util.Map" resultType="java.lang.Integer">
        select count(1) as total from
        <include refid="Table_Name"/>
        <if test="example != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <select id="selectByPager" resultMap="RtCurrencyTeamMap" parameterType="java.util.Map">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="Table_Name"/>
        <if test="example != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="pager.sortItem != null and pager.sortItem != ''">
            order by ${pager.sortItem} ${pager.sortType}
        </if>
        limit #{pager.startIndex} , #{pager.pageSize}
    </select>
    <!-- end select -->
    <!-- My Custom Interfaces -->
</mapper>