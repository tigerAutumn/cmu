<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cc.newex.dax.extra.data.customer.WorkOrderRepository">
    <!-- CodeBuilder  Generated-->
    <resultMap id="WorkOrderMap" type="cc.newex.dax.extra.domain.customer.WorkOrder">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="menu_id" property="menuId" jdbcType="INTEGER"/>
        <result column="group_id" property="groupId" jdbcType="INTEGER"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="unfold_count" property="unfoldCount" jdbcType="INTEGER"/>
        <result column="urgent" property="urgent" jdbcType="INTEGER"/>
        <result column="site_type" property="siteType" jdbcType="INTEGER"/>
        <result column="locale" property="locale" jdbcType="VARCHAR"/>
        <result column="from_type" property="fromType" jdbcType="INTEGER"/>
        <result column="is_show" property="isShow" jdbcType="INTEGER"/>
        <result column="source" property="source" jdbcType="INTEGER"/>
        <result column="content" property="content" jdbcType="VARCHAR"/>
        <result column="remit_name" property="remitName" jdbcType="VARCHAR"/>
        <result column="remit_card_number" property="remitCardNumber" jdbcType="VARCHAR"/>
        <result column="remit_alipay" property="remitAlipay" jdbcType="VARCHAR"/>
        <result column="remit_amount" property="remitAmount" jdbcType="VARCHAR"/>
        <result column="coin_type" property="coinType" jdbcType="VARCHAR"/>
        <result column="withdraw_address" property="withdrawAddress" jdbcType="VARCHAR"/>
        <result column="withdraw_number" property="withdrawNumber" jdbcType="DECIMAL"/>
        <result column="answer_status" property="answerStatus" jdbcType="INTEGER"/>
        <result column="user_id" property="userId" jdbcType="BIGINT"/>
        <result column="user_name" property="userName" jdbcType="VARCHAR"/>
        <result column="user_email" property="userEmail" jdbcType="VARCHAR"/>
        <result column="user_phone" property="userPhone" jdbcType="VARCHAR"/>
        <result column="satisfaction" property="satisfaction" jdbcType="INTEGER"/>
        <result column="response_time" property="responseTime" jdbcType="TIMESTAMP"/>
        <result column="solve_time" property="solveTime" jdbcType="TIMESTAMP"/>
        <result column="handle_time" property="handleTime" jdbcType="BIGINT"/>
        <result column="dispose_time" property="disposeTime" jdbcType="BIGINT"/>
        <result column="comment" property="comment" jdbcType="VARCHAR"/>
        <result column="accept_time" property="acceptTime" jdbcType="TIMESTAMP"/>
        <result column="last_reply_time" property="lastReplyTime" jdbcType="TIMESTAMP"/>
        <result column="fresh" property="fresh" jdbcType="INTEGER"/>
        <result column="admin_user_id" property="adminUserId" jdbcType="INTEGER"/>
        <result column="admin_account" property="adminAccount" jdbcType="VARCHAR"/>
        <result column="admin_name" property="adminName" jdbcType="VARCHAR"/>
        <result column="create_admin_user_id" property="createAdminUserId" jdbcType="INTEGER"/>
        <result column="created_date" property="createdDate" jdbcType="TIMESTAMP"/>
        <result column="updated_date" property="updatedDate" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Table_Name">customer_work_order</sql>
    <sql id="Base_Column_List_Without_Id">
  	  	menu_id ,group_id ,status ,unfold_count ,urgent ,site_type ,locale ,from_type ,is_show ,source ,content ,remit_name ,remit_card_number ,remit_alipay ,remit_amount ,coin_type ,withdraw_address ,withdraw_number ,answer_status ,user_id ,user_name ,user_email ,user_phone ,satisfaction ,response_time ,solve_time ,handle_time ,dispose_time ,comment ,accept_time ,last_reply_time ,fresh ,admin_user_id ,admin_account ,admin_name ,create_admin_user_id ,created_date ,updated_date 			  </sql>
    <sql id="Base_Column_List">
        id ,
        <include refid="Base_Column_List_Without_Id"/>
    </sql>
    <sql id="Insert_Columns">
        <if test="record.menuId != null">menu_id,</if>
        <if test="record.groupId != null">group_id,</if>
        <if test="record.status != null">status,</if>
        <if test="record.unfoldCount != null">unfold_count,</if>
        <if test="record.urgent != null">urgent,</if>
        <if test="record.siteType != null">site_type,</if>
        <if test="record.locale != null">locale,</if>
        <if test="record.fromType != null">from_type,</if>
        <if test="record.isShow != null">is_show,</if>
        <if test="record.source != null">source,</if>
        <if test="record.content != null">content,</if>
        <if test="record.remitName != null">remit_name,</if>
        <if test="record.remitCardNumber != null">remit_card_number,</if>
        <if test="record.remitAlipay != null">remit_alipay,</if>
        <if test="record.remitAmount != null">remit_amount,</if>
        <if test="record.coinType != null">coin_type,</if>
        <if test="record.withdrawAddress != null">withdraw_address,</if>
        <if test="record.withdrawNumber != null">withdraw_number,</if>
        <if test="record.answerStatus != null">answer_status,</if>
        <if test="record.userId != null">user_id,</if>
        <if test="record.userName != null">user_name,</if>
        <if test="record.userEmail != null">user_email,</if>
        <if test="record.userPhone != null">user_phone,</if>
        <if test="record.satisfaction != null">satisfaction,</if>
        <if test="record.responseTime != null">response_time,</if>
        <if test="record.solveTime != null">solve_time,</if>
        <if test="record.handleTime != null">handle_time,</if>
        <if test="record.disposeTime != null">dispose_time,</if>
        <if test="record.comment != null">comment,</if>
        <if test="record.acceptTime != null">accept_time,</if>
        <if test="record.lastReplyTime != null">last_reply_time,</if>
        <if test="record.fresh != null">fresh,</if>
        <if test="record.adminUserId != null">admin_user_id,</if>
        <if test="record.adminAccount != null">admin_account,</if>
        <if test="record.adminName != null">admin_name,</if>
        <if test="record.createAdminUserId != null">create_admin_user_id,</if>
        <if test="record.createdDate != null">created_date,</if>
        <if test="record.updatedDate != null">updated_date,</if>
    </sql>
    <sql id="Insert_Values">
        <if test="record.menuId != null">#{record.menuId,jdbcType=INTEGER},</if>
        <if test="record.groupId != null">#{record.groupId,jdbcType=INTEGER},</if>
        <if test="record.status != null">#{record.status,jdbcType=INTEGER},</if>
        <if test="record.unfoldCount != null">#{record.unfoldCount,jdbcType=INTEGER},</if>
        <if test="record.urgent != null">#{record.urgent,jdbcType=INTEGER},</if>
        <if test="record.siteType != null">#{record.siteType,jdbcType=INTEGER},</if>
        <if test="record.locale != null">#{record.locale,jdbcType=VARCHAR},</if>
        <if test="record.fromType != null">#{record.fromType,jdbcType=INTEGER},</if>
        <if test="record.isShow != null">#{record.isShow,jdbcType=INTEGER},</if>
        <if test="record.source != null">#{record.source,jdbcType=INTEGER},</if>
        <if test="record.content != null">#{record.content,jdbcType=VARCHAR},</if>
        <if test="record.remitName != null">#{record.remitName,jdbcType=VARCHAR},</if>
        <if test="record.remitCardNumber != null">#{record.remitCardNumber,jdbcType=VARCHAR},</if>
        <if test="record.remitAlipay != null">#{record.remitAlipay,jdbcType=VARCHAR},</if>
        <if test="record.remitAmount != null">#{record.remitAmount,jdbcType=VARCHAR},</if>
        <if test="record.coinType != null">#{record.coinType,jdbcType=VARCHAR},</if>
        <if test="record.withdrawAddress != null">#{record.withdrawAddress,jdbcType=VARCHAR},</if>
        <if test="record.withdrawNumber != null">#{record.withdrawNumber,jdbcType=DECIMAL},</if>
        <if test="record.answerStatus != null">#{record.answerStatus,jdbcType=INTEGER},</if>
        <if test="record.userId != null">#{record.userId,jdbcType=BIGINT},</if>
        <if test="record.userName != null">#{record.userName,jdbcType=VARCHAR},</if>
        <if test="record.userEmail != null">#{record.userEmail,jdbcType=VARCHAR},</if>
        <if test="record.userPhone != null">#{record.userPhone,jdbcType=VARCHAR},</if>
        <if test="record.satisfaction != null">#{record.satisfaction,jdbcType=INTEGER},</if>
        <if test="record.responseTime != null">#{record.responseTime,jdbcType=TIMESTAMP},</if>
        <if test="record.solveTime != null">#{record.solveTime,jdbcType=TIMESTAMP},</if>
        <if test="record.handleTime != null">#{record.handleTime,jdbcType=BIGINT},</if>
        <if test="record.disposeTime != null">#{record.disposeTime,jdbcType=BIGINT},</if>
        <if test="record.comment != null">#{record.comment,jdbcType=VARCHAR},</if>
        <if test="record.acceptTime != null">#{record.acceptTime,jdbcType=TIMESTAMP},</if>
        <if test="record.lastReplyTime != null">#{record.lastReplyTime,jdbcType=TIMESTAMP},</if>
        <if test="record.fresh != null">#{record.fresh,jdbcType=INTEGER},</if>
        <if test="record.adminUserId != null">#{record.adminUserId,jdbcType=INTEGER},</if>
        <if test="record.adminAccount != null">#{record.adminAccount,jdbcType=VARCHAR},</if>
        <if test="record.adminName != null">#{record.adminName,jdbcType=VARCHAR},</if>
        <if test="record.createAdminUserId != null">#{record.createAdminUserId,jdbcType=INTEGER},</if>
        <if test="record.createdDate != null">#{record.createdDate,jdbcType=TIMESTAMP},</if>
        <if test="record.updatedDate != null">#{record.updatedDate,jdbcType=TIMESTAMP},</if>
    </sql>
    <sql id="Batch_Insert_Values">
 #{record.menuId,jdbcType=INTEGER},
		 					 #{record.groupId,jdbcType=INTEGER},
		 					 #{record.status,jdbcType=INTEGER},
		 					 #{record.unfoldCount,jdbcType=INTEGER},
		 					 #{record.urgent,jdbcType=INTEGER},
		 					 #{record.siteType,jdbcType=INTEGER},
		 					 #{record.locale,jdbcType=VARCHAR},
		 					 #{record.fromType,jdbcType=INTEGER},
		 					 #{record.isShow,jdbcType=INTEGER},
		 					 #{record.source,jdbcType=INTEGER},
		 					 #{record.content,jdbcType=VARCHAR},
		 					 #{record.remitName,jdbcType=VARCHAR},
		 					 #{record.remitCardNumber,jdbcType=VARCHAR},
		 					 #{record.remitAlipay,jdbcType=VARCHAR},
		 					 #{record.remitAmount,jdbcType=VARCHAR},
		 					 #{record.coinType,jdbcType=VARCHAR},
		 					 #{record.withdrawAddress,jdbcType=VARCHAR},
		 					 #{record.withdrawNumber,jdbcType=DECIMAL},
		 					 #{record.answerStatus,jdbcType=INTEGER},
		 					 #{record.userId,jdbcType=BIGINT},
		 					 #{record.userName,jdbcType=VARCHAR},
		 					 #{record.userEmail,jdbcType=VARCHAR},
		 					 #{record.userPhone,jdbcType=VARCHAR},
		 					 #{record.satisfaction,jdbcType=INTEGER},
		 					 #{record.responseTime,jdbcType=TIMESTAMP},
		 					 #{record.solveTime,jdbcType=TIMESTAMP},
		 					 #{record.handleTime,jdbcType=BIGINT},
		 					 #{record.disposeTime,jdbcType=BIGINT},
		 					 #{record.comment,jdbcType=VARCHAR},
		 					 #{record.acceptTime,jdbcType=TIMESTAMP},
		 					 #{record.lastReplyTime,jdbcType=TIMESTAMP},
		 					 #{record.fresh,jdbcType=INTEGER},
		 					 #{record.adminUserId,jdbcType=INTEGER},
		 					 #{record.adminAccount,jdbcType=VARCHAR},
		 					 #{record.adminName,jdbcType=VARCHAR},
		 					 #{record.createAdminUserId,jdbcType=INTEGER},
		 					 #{record.createdDate,jdbcType=TIMESTAMP},
		 					 #{record.updatedDate,jdbcType=TIMESTAMP},
		 	    </sql>
    <sql id="Batch_Insert_Values_On_DuplicateKey">
        #{record.id,jdbcType=BIGINT},
        <include refid="Batch_Insert_Values"/>
    </sql>
    <sql id="Update_Set_From_Bean">
        <if test="record.menuId != null">menu_id = #{record.menuId,jdbcType=INTEGER} ,</if>
        <if test="record.groupId != null">group_id = #{record.groupId,jdbcType=INTEGER} ,</if>
        <if test="record.status != null">status = #{record.status,jdbcType=INTEGER} ,</if>
        <if test="record.unfoldCount != null">unfold_count = #{record.unfoldCount,jdbcType=INTEGER} ,</if>
        <if test="record.urgent != null">urgent = #{record.urgent,jdbcType=INTEGER} ,</if>
        <if test="record.siteType != null">site_type = #{record.siteType,jdbcType=INTEGER} ,</if>
        <if test="record.locale != null">locale = #{record.locale,jdbcType=VARCHAR} ,</if>
        <if test="record.fromType != null">from_type = #{record.fromType,jdbcType=INTEGER} ,</if>
        <if test="record.isShow != null">is_show = #{record.isShow,jdbcType=INTEGER} ,</if>
        <if test="record.source != null">source = #{record.source,jdbcType=INTEGER} ,</if>
        <if test="record.content != null">content = #{record.content,jdbcType=VARCHAR} ,</if>
        <if test="record.remitName != null">remit_name = #{record.remitName,jdbcType=VARCHAR} ,</if>
        <if test="record.remitCardNumber != null">remit_card_number = #{record.remitCardNumber,jdbcType=VARCHAR} ,</if>
        <if test="record.remitAlipay != null">remit_alipay = #{record.remitAlipay,jdbcType=VARCHAR} ,</if>
        <if test="record.remitAmount != null">remit_amount = #{record.remitAmount,jdbcType=VARCHAR} ,</if>
        <if test="record.coinType != null">coin_type = #{record.coinType,jdbcType=VARCHAR} ,</if>
        <if test="record.withdrawAddress != null">withdraw_address = #{record.withdrawAddress,jdbcType=VARCHAR} ,</if>
        <if test="record.withdrawNumber != null">withdraw_number = #{record.withdrawNumber,jdbcType=DECIMAL} ,</if>
        <if test="record.answerStatus != null">answer_status = #{record.answerStatus,jdbcType=INTEGER} ,</if>
        <if test="record.userId != null">user_id = #{record.userId,jdbcType=BIGINT} ,</if>
        <if test="record.userName != null">user_name = #{record.userName,jdbcType=VARCHAR} ,</if>
        <if test="record.userEmail != null">user_email = #{record.userEmail,jdbcType=VARCHAR} ,</if>
        <if test="record.userPhone != null">user_phone = #{record.userPhone,jdbcType=VARCHAR} ,</if>
        <if test="record.satisfaction != null">satisfaction = #{record.satisfaction,jdbcType=INTEGER} ,</if>
        <if test="record.responseTime != null">response_time = #{record.responseTime,jdbcType=TIMESTAMP} ,</if>
        <if test="record.solveTime != null">solve_time = #{record.solveTime,jdbcType=TIMESTAMP} ,</if>
        <if test="record.handleTime != null">handle_time = #{record.handleTime,jdbcType=BIGINT} ,</if>
        <if test="record.disposeTime != null">dispose_time = #{record.disposeTime,jdbcType=BIGINT} ,</if>
        <if test="record.comment != null">comment = #{record.comment,jdbcType=VARCHAR} ,</if>
        <if test="record.acceptTime != null">accept_time = #{record.acceptTime,jdbcType=TIMESTAMP} ,</if>
        <if test="record.lastReplyTime != null">last_reply_time = #{record.lastReplyTime,jdbcType=TIMESTAMP} ,</if>
        <if test="record.fresh != null">fresh = #{record.fresh,jdbcType=INTEGER} ,</if>
        <if test="record.adminUserId != null">admin_user_id = #{record.adminUserId,jdbcType=INTEGER} ,</if>
        <if test="record.adminAccount != null">admin_account = #{record.adminAccount,jdbcType=VARCHAR} ,</if>
        <if test="record.adminName != null">admin_name = #{record.adminName,jdbcType=VARCHAR} ,</if>
        <if test="record.createAdminUserId != null">create_admin_user_id = #{record.createAdminUserId,jdbcType=INTEGER} ,</if>
        <if test="record.createdDate != null">created_date = #{record.createdDate,jdbcType=TIMESTAMP} ,</if>
        <if test="record.updatedDate != null">updated_date = #{record.updatedDate,jdbcType=TIMESTAMP} ,</if>
    </sql>
    <!-- insert -->
    <insert id="insert" parameterType="java.util.Map">
        <selectKey resultType="java.lang.Long" keyProperty="record.id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into
        <include refid="Table_Name"/>
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <include refid="Insert_Columns"/>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <include refid="Insert_Values"/>
        </trim>
    </insert>
    <insert id="batchInsert" parameterType="java.util.Map">
        insert into
        <include refid="Table_Name"/>
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <include refid="Base_Column_List_Without_Id"/>
        </trim>
        values
        <foreach collection="records" item="record" index="index" separator=",">
            <trim prefix="(" suffix=")" suffixOverrides=",">
                <include refid="Batch_Insert_Values"/>
            </trim>
        </foreach>
    </insert>
    <insert id="batchInsertOnDuplicateKey" parameterType="java.util.Map">
        insert into
        <include refid="Table_Name"/>
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <include refid="Base_Column_List"/>
        </trim>
        values
        <foreach collection="records" item="record" index="index" separator=",">
            <trim prefix="(" suffix=")" suffixOverrides=",">
                <include refid="Batch_Insert_Values_On_DuplicateKey"/>
            </trim>
        </foreach>
        ON DUPLICATE KEY UPDATE
        menu_id = VALUES(menu_id) , group_id = VALUES(group_id) , status = VALUES(status) , unfold_count = VALUES(unfold_count) , urgent = VALUES(urgent) , site_type =
        VALUES(site_type) , locale = VALUES(locale) , from_type = VALUES(from_type) , is_show = VALUES(is_show) , source = VALUES(source) , content = VALUES(content) , remit_name =
        VALUES(remit_name) , remit_card_number = VALUES(remit_card_number) , remit_alipay = VALUES(remit_alipay) , remit_amount = VALUES(remit_amount) , coin_type =
        VALUES(coin_type) , withdraw_address = VALUES(withdraw_address) , withdraw_number = VALUES(withdraw_number) , answer_status = VALUES(answer_status) , user_id =
        VALUES(user_id) , user_name = VALUES(user_name) , user_email = VALUES(user_email) , user_phone = VALUES(user_phone) , satisfaction = VALUES(satisfaction) , response_time =
        VALUES(response_time) , solve_time = VALUES(solve_time) , handle_time = VALUES(handle_time) , dispose_time = VALUES(dispose_time) , comment = VALUES(comment) , accept_time
        = VALUES(accept_time) , last_reply_time = VALUES(last_reply_time) , fresh = VALUES(fresh) , admin_user_id = VALUES(admin_user_id) , admin_account = VALUES(admin_account) ,
        admin_name = VALUES(admin_name) , create_admin_user_id = VALUES(create_admin_user_id) , created_date = VALUES(created_date) , updated_date = VALUES(updated_date)
    </insert>
    <!-- end insert -->
    <!-- delete -->
    <delete id="deleteById" parameterType="java.util.Map">
        delete from
        <include refid="Table_Name"/>
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="java.util.Map">
        delete from
        <include refid="Table_Name"/>
        <if test="example != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <delete id="deleteIn" parameterType="java.util.Map">
        delete from
        <include refid="Table_Name"/>
        where id in
        <foreach collection="records" item="record" index="index" open="(" separator="," close=")">
            #{record.id,jdbcType=BIGINT}
        </foreach>
    </delete>
    <!-- end delete -->
    <!-- update -->
    <update id="updateById" parameterType="java.util.Map">
        update
        <include refid="Table_Name"/>
        <set>
            <include refid="Update_Set_From_Bean"/>
        </set>
        where id = #{record.id,jdbcType=BIGINT}
    </update>
    <update id="updateByExample" parameterType="java.util.Map">
        update
        <include refid="Table_Name"/>
        <set>
            <include refid="Update_Set_From_Bean"/>
        </set>
        <if test="example != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </update>
    <update id="batchUpdate" parameterType="java.util.Map">
        <foreach collection="records" item="record" index="index" open="" close="" separator=";">
            update
            <include refid="Table_Name"/>
            <set>
                <include refid="Update_Set_From_Bean"/>
            </set>
            where id=#{record.id,jdbcType=BIGINT}
        </foreach>
    </update>
    <!-- end update -->
    <!-- select -->
    <select id="selectById" resultMap="WorkOrderMap" parameterType="java.util.Map">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="Table_Name"/>
        where id = #{id,jdbcType=BIGINT}
    </select>
    <select id="selectByExample" resultMap="WorkOrderMap" parameterType="java.util.Map">
        select
        <if test="example != null and example.distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from
        <include refid="Table_Name"/>
        <if test="example != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="example != null and example.orderByClause != null">
            order by ${example.orderByClause}
        </if>
    </select>
    <select id="selectOneByExample" resultMap="WorkOrderMap" parameterType="java.util.Map">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="Table_Name"/>
        <if test="example != null">
            <include refid="Example_Where_Clause"/>
        </if>
        limit 1
    </select>
    <select id="selectIn" resultMap="WorkOrderMap" parameterType="java.util.Map">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="Table_Name"/>
        where id IN
        <foreach collection="records" item="record" index="index" open="(" separator="," close=")">
            #{record.id,jdbcType=BIGINT}
        </foreach>
    </select>
    <select id="countByExample" resultType="java.lang.Integer" parameterType="java.util.Map">
        select count(*) as total from
        <include refid="Table_Name"/>
        <if test="example != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <select id="countByPager" resultType="java.lang.Integer" parameterType="java.util.Map">
        select count(*) as total from
        <include refid="Table_Name"/>
        <if test="example != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <select id="selectByPager" resultMap="WorkOrderMap" parameterType="java.util.Map">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="Table_Name"/>
        <if test="example != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="pager.sortItem != null and pager.sortItem != '' ">
            order by ${pager.sortItem} ${pager.sortType}
        </if>
        limit #{pager.startIndex} , #{pager.pageSize}
    </select>
    <!-- end select -->
    <!-- My Custom Interfaces -->
</mapper>
