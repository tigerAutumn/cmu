<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cc.newex.dax.extra.data.currency.CurrencyDetailInfoRepository">
    <!-- CodeBuilder Generated -->
    <resultMap id="CurrencyDetailInfoMap" type="cc.newex.dax.extra.domain.currency.CurrencyDetailInfo">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="code" property="code" jdbcType="VARCHAR"/>
        <result column="locale" property="locale" jdbcType="VARCHAR"/>
        <result column="concept" property="concept" jdbcType="VARCHAR"/>
        <result column="white_paper" property="whitePaper" jdbcType="VARCHAR"/>
        <result column="introduction" property="introduction" jdbcType="LONGVARCHAR"/>
        <result column="telegram" property="telegram" jdbcType="VARCHAR"/>
        <result column="facebook" property="facebook" jdbcType="VARCHAR"/>
        <result column="twitter" property="twitter" jdbcType="VARCHAR"/>
        <result column="weibo" property="weibo" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="publisher_id" property="publisherId" jdbcType="INTEGER"/>
        <result column="sort" property="sort" jdbcType="INTEGER"/>
        <result column="created_date" property="createdDate" jdbcType="TIMESTAMP"/>
        <result column="updated_date" property="updatedDate" jdbcType="TIMESTAMP"/>
        <result column="coin_market_cap_url" property="coinMarketCapUrl" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Table_Name">
    currency_detail_info
  </sql>
    <sql id="Base_Column_List_Without_Id">
    code, locale, concept, white_paper, introduction, telegram, facebook, twitter, weibo, 
    status, publisher_id, sort, created_date, updated_date, coin_market_cap_url
  </sql>
    <sql id="Base_Column_List">
        id,
        <include refid="Base_Column_List_Without_Id"/>
    </sql>
    <sql id="Insert_Columns">
        <if test="record.code != null">
            code,
        </if>
        <if test="record.locale != null">
            locale,
        </if>
        <if test="record.concept != null">
            concept,
        </if>
        <if test="record.whitePaper != null">
            white_paper,
        </if>
        <if test="record.introduction != null">
            introduction,
        </if>
        <if test="record.telegram != null">
            telegram,
        </if>
        <if test="record.facebook != null">
            facebook,
        </if>
        <if test="record.twitter != null">
            twitter,
        </if>
        <if test="record.weibo != null">
            weibo,
        </if>
        <if test="record.status != null">
            status,
        </if>
        <if test="record.publisherId != null">
            publisher_id,
        </if>
        <if test="record.sort != null">
            sort,
        </if>
        <if test="record.createdDate != null">
            created_date,
        </if>
        <if test="record.updatedDate != null">
            updated_date,
        </if>
        <if test="record.coinMarketCapUrl != null">
            coin_market_cap_url,
        </if>
    </sql>
    <sql id="Insert_Values">
        <if test="record.code != null">
            #{record.code,jdbcType=VARCHAR},
        </if>
        <if test="record.locale != null">
            #{record.locale,jdbcType=VARCHAR},
        </if>
        <if test="record.concept != null">
            #{record.concept,jdbcType=VARCHAR},
        </if>
        <if test="record.whitePaper != null">
            #{record.whitePaper,jdbcType=VARCHAR},
        </if>
        <if test="record.introduction != null">
            #{record.introduction,jdbcType=LONGVARCHAR},
        </if>
        <if test="record.telegram != null">
            #{record.telegram,jdbcType=VARCHAR},
        </if>
        <if test="record.facebook != null">
            #{record.facebook,jdbcType=VARCHAR},
        </if>
        <if test="record.twitter != null">
            #{record.twitter,jdbcType=VARCHAR},
        </if>
        <if test="record.weibo != null">
            #{record.weibo,jdbcType=VARCHAR},
        </if>
        <if test="record.status != null">
            #{record.status,jdbcType=INTEGER},
        </if>
        <if test="record.publisherId != null">
            #{record.publisherId,jdbcType=INTEGER},
        </if>
        <if test="record.sort != null">
            #{record.sort,jdbcType=INTEGER},
        </if>
        <if test="record.createdDate != null">
            #{record.createdDate,jdbcType=TIMESTAMP},
        </if>
        <if test="record.updatedDate != null">
            #{record.updatedDate,jdbcType=TIMESTAMP},
        </if>
        <if test="record.coinMarketCapUrl != null">
            #{record.coinMarketCapUrl,jdbcType=VARCHAR},
        </if>
    </sql>
    <sql id="Batch_Insert_Values">
    #{record.code,jdbcType=VARCHAR},
    #{record.locale,jdbcType=VARCHAR},
    #{record.concept,jdbcType=VARCHAR},
    #{record.whitePaper,jdbcType=VARCHAR},
    #{record.introduction,jdbcType=LONGVARCHAR},
    #{record.telegram,jdbcType=VARCHAR},
    #{record.facebook,jdbcType=VARCHAR},
    #{record.twitter,jdbcType=VARCHAR},
    #{record.weibo,jdbcType=VARCHAR},
    #{record.status,jdbcType=INTEGER},
    #{record.publisherId,jdbcType=INTEGER},
    #{record.sort,jdbcType=INTEGER},
    #{record.createdDate,jdbcType=TIMESTAMP},
    #{record.updatedDate,jdbcType=TIMESTAMP},
    #{record.coinMarketCapUrl,jdbcType=VARCHAR},
  </sql>
    <sql id="Batch_Insert_Values_On_DuplicateKey">
        #{record.id,jdbcType=BIGINT},
        <include refid="Batch_Insert_Values"/>
    </sql>
    <sql id="Update_Set_From_Bean">
        <if test="record.code != null">
            code = #{record.code,jdbcType=VARCHAR},
        </if>
        <if test="record.locale != null">
            locale = #{record.locale,jdbcType=VARCHAR},
        </if>
        <if test="record.concept != null">
            concept = #{record.concept,jdbcType=VARCHAR},
        </if>
        <if test="record.whitePaper != null">
            white_paper = #{record.whitePaper,jdbcType=VARCHAR},
        </if>
        <if test="record.introduction != null">
            introduction = #{record.introduction,jdbcType=LONGVARCHAR},
        </if>
        <if test="record.telegram != null">
            telegram = #{record.telegram,jdbcType=VARCHAR},
        </if>
        <if test="record.facebook != null">
            facebook = #{record.facebook,jdbcType=VARCHAR},
        </if>
        <if test="record.twitter != null">
            twitter = #{record.twitter,jdbcType=VARCHAR},
        </if>
        <if test="record.weibo != null">
            weibo = #{record.weibo,jdbcType=VARCHAR},
        </if>
        <if test="record.status != null">
            status = #{record.status,jdbcType=INTEGER},
        </if>
        <if test="record.publisherId != null">
            publisher_id = #{record.publisherId,jdbcType=INTEGER},
        </if>
        <if test="record.sort != null">
            sort = #{record.sort,jdbcType=INTEGER},
        </if>
        <if test="record.createdDate != null">
            created_date = #{record.createdDate,jdbcType=TIMESTAMP},
        </if>
        <if test="record.updatedDate != null">
            updated_date = #{record.updatedDate,jdbcType=TIMESTAMP},
        </if>
        <if test="record.coinMarketCapUrl != null">
            coin_market_cap_url = #{record.coinMarketCapUrl,jdbcType=VARCHAR},
        </if>
    </sql>
    <!-- insert -->
    <insert id="insert" parameterType="java.util.Map">
        <selectKey resultType="java.lang.Long" keyProperty="record.id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into
        <include refid="Table_Name"/>
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <include refid="Insert_Columns"/>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <include refid="Insert_Values"/>
        </trim>
    </insert>
    <insert id="batchInsert" parameterType="java.util.Map">
        insert into
        <include refid="Table_Name"/>
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <include refid="Base_Column_List_Without_Id"/>
        </trim>
        values
        <foreach collection="records" item="record" index="index" separator=",">
            <trim prefix="(" suffix=")" suffixOverrides=",">
                <include refid="Batch_Insert_Values"/>
            </trim>
        </foreach>
    </insert>
    <insert id="batchInsertOnDuplicateKey" parameterType="java.util.Map">
        insert into
        <include refid="Table_Name"/>
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <include refid="Base_Column_List"/>
        </trim>
        values
        <foreach collection="records" item="record" index="index" separator=",">
            <trim prefix="(" suffix=")" suffixOverrides=",">
                <include refid="Batch_Insert_Values_On_DuplicateKey"/>
            </trim>
        </foreach>
        ON DUPLICATE KEY UPDATE
        code = VALUES(code), locale = VALUES(locale), concept = VALUES(concept), white_paper = VALUES(white_paper), introduction = VALUES(introduction), telegram =
        VALUES(telegram), facebook = VALUES(facebook), twitter = VALUES(twitter), weibo = VALUES(weibo), status = VALUES(status), publisher_id = VALUES(publisher_id), sort =
        VALUES(sort), created_date = VALUES(created_date), updated_date = VALUES(updated_date), coin_market_cap_url = VALUES(coin_market_cap_url)
    </insert>
    <!-- end insert -->
    <!-- delete -->
    <delete id="deleteById" parameterType="java.util.Map">
        delete from
        <include refid="Table_Name"/>
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="java.util.Map">
        delete from
        <include refid="Table_Name"/>
        <if test="example != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <delete id="deleteIn" parameterType="java.util.Map">
        delete from
        <include refid="Table_Name"/>
        where id in
        <foreach collection="records" item="record" index="index" open="(" separator="," close=")">
            #{record.id,jdbcType=BIGINT}
        </foreach>
    </delete>
    <!-- end delete -->
    <!-- update -->
    <update id="updateById" parameterType="java.util.Map">
        update
        <include refid="Table_Name"/>
        <set>
            <include refid="Update_Set_From_Bean"/>
        </set>
        where id = #{record.id,jdbcType=BIGINT}
    </update>
    <update id="updateByExample" parameterType="java.util.Map">
        update
        <include refid="Table_Name"/>
        <set>
            <include refid="Update_Set_From_Bean"/>
        </set>
        <if test="example != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </update>
    <update id="batchUpdate" parameterType="java.util.Map">
        <foreach collection="records" item="record" index="index" open="" close="" separator=";">
            update
            <include refid="Table_Name"/>
            <set>
                <include refid="Update_Set_From_Bean"/>
            </set>
            where id = #{record.id,jdbcType=BIGINT}
        </foreach>
    </update>
    <!-- end update -->
    <!-- select -->
    <select id="selectById" parameterType="java.util.Map" resultMap="CurrencyDetailInfoMap">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="Table_Name"/>
        where id = #{id,jdbcType=BIGINT}
    </select>
    <select id="selectByExample" resultMap="CurrencyDetailInfoMap" parameterType="java.util.Map">
        select
        <if test="example != null and example.distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from
        <include refid="Table_Name"/>
        <if test="example != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="example != null and example.orderByClause != null">
            order by ${example.orderByClause}
        </if>
    </select>
    <select id="selectOneByExample" resultMap="CurrencyDetailInfoMap" parameterType="java.util.Map">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="Table_Name"/>
        <if test="example != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="example != null and example.orderByClause != null">
            order by ${example.orderByClause}
        </if>
        limit 1
    </select>
    <select id="selectIn" resultMap="CurrencyDetailInfoMap" parameterType="java.util.Map">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="Table_Name"/>
        where id in
        <foreach collection="records" item="record" index="index" open="(" separator="," close=")">
            #{record.id,jdbcType=BIGINT}
        </foreach>
    </select>
    <select id="countByExample" parameterType="java.util.Map" resultType="java.lang.Integer">
        select count(1) as total from
        <include refid="Table_Name"/>
        <if test="example != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <select id="countByPager" parameterType="java.util.Map" resultType="java.lang.Integer">
        select count(1) as total from
        <include refid="Table_Name"/>
        <if test="example != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <select id="selectByPager" resultMap="CurrencyDetailInfoMap" parameterType="java.util.Map">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="Table_Name"/>
        <if test="example != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="pager.sortItem != null and pager.sortItem != ''">
            order by ${pager.sortItem} ${pager.sortType}
        </if>
        limit #{pager.startIndex} , #{pager.pageSize}
    </select>
    <!-- end select -->
    <!-- My Custom Interfaces -->
</mapper>