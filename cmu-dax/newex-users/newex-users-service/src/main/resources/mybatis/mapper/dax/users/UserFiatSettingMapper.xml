<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cc.newex.dax.users.data.UserFiatSettingRepository">
    <!-- CodeBuilder  Generated-->
    <resultMap id="UserFiatSettingMap" type="cc.newex.dax.users.domain.UserFiatSetting">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="user_id" property="userId" jdbcType="BIGINT"/>
        <result column="user_name" property="userName" jdbcType="VARCHAR"/>
        <result column="bank_card" property="bankCard" jdbcType="VARCHAR"/>
        <result column="bank_address" property="bankAddress" jdbcType="VARCHAR"/>
        <result column="bank_name" property="bankName" jdbcType="VARCHAR"/>
        <result column="bank_no" property="bankNo" jdbcType="VARCHAR"/>
        <result column="alipay_name" property="alipayName" jdbcType="VARCHAR"/>
        <result column="alipay_card" property="alipayCard" jdbcType="VARCHAR"/>
        <result column="alipay_receiving_img" property="alipayReceivingImg" jdbcType="VARCHAR"/>
        <result column="wechat_pay_name" property="wechatPayName" jdbcType="VARCHAR"/>
        <result column="wechat_card" property="wechatCard" jdbcType="VARCHAR"/>
        <result column="wechat_receiving_img" property="wechatReceivingImg" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="remarks" property="remarks" jdbcType="VARCHAR"/>
        <result column="pay_type" property="payType" jdbcType="INTEGER"/>
        <result column="created_date" property="createdDate" jdbcType="TIMESTAMP"/>
        <result column="updated_date" property="updatedDate" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Table_Name">user_fiat_setting</sql>
    <sql id="Base_Column_List_Without_Id">
  	  	user_id ,user_name ,bank_card ,bank_address ,bank_name ,bank_no ,alipay_name ,alipay_card ,alipay_receiving_img ,wechat_pay_name ,wechat_card ,wechat_receiving_img ,status ,remarks ,pay_type ,created_date ,updated_date 			  </sql>
    <sql id="Base_Column_List">
        id ,
        <include refid="Base_Column_List_Without_Id"/>
    </sql>
    <sql id="Insert_Columns">
        <if test="record.userId != null">user_id,</if>
        <if test="record.userName != null">user_name,</if>
        <if test="record.bankCard != null">bank_card,</if>
        <if test="record.bankAddress != null">bank_address,</if>
        <if test="record.bankName != null">bank_name,</if>
        <if test="record.bankNo != null">bank_no,</if>
        <if test="record.alipayName != null">alipay_name,</if>
        <if test="record.alipayCard != null">alipay_card,</if>
        <if test="record.alipayReceivingImg != null">alipay_receiving_img,</if>
        <if test="record.wechatPayName != null">wechat_pay_name,</if>
        <if test="record.wechatCard != null">wechat_card,</if>
        <if test="record.wechatReceivingImg != null">wechat_receiving_img,</if>
        <if test="record.status != null">status,</if>
        <if test="record.remarks != null">remarks,</if>
        <if test="record.payType != null">pay_type,</if>
        <if test="record.createdDate != null">created_date,</if>
        <if test="record.updatedDate != null">updated_date,</if>
    </sql>
    <sql id="Insert_Values">
        <if test="record.userId != null">#{record.userId,jdbcType=BIGINT},</if>
        <if test="record.userName != null">#{record.userName,jdbcType=VARCHAR},</if>
        <if test="record.bankCard != null">#{record.bankCard,jdbcType=VARCHAR},</if>
        <if test="record.bankAddress != null">#{record.bankAddress,jdbcType=VARCHAR},</if>
        <if test="record.bankName != null">#{record.bankName,jdbcType=VARCHAR},</if>
        <if test="record.bankNo != null">#{record.bankNo,jdbcType=VARCHAR},</if>
        <if test="record.alipayName != null">#{record.alipayName,jdbcType=VARCHAR},</if>
        <if test="record.alipayCard != null">#{record.alipayCard,jdbcType=VARCHAR},</if>
        <if test="record.alipayReceivingImg != null">#{record.alipayReceivingImg,jdbcType=VARCHAR},</if>
        <if test="record.wechatPayName != null">#{record.wechatPayName,jdbcType=VARCHAR},</if>
        <if test="record.wechatCard != null">#{record.wechatCard,jdbcType=VARCHAR},</if>
        <if test="record.wechatReceivingImg != null">#{record.wechatReceivingImg,jdbcType=VARCHAR},</if>
        <if test="record.status != null">#{record.status,jdbcType=INTEGER},</if>
        <if test="record.remarks != null">#{record.remarks,jdbcType=VARCHAR},</if>
        <if test="record.payType != null">#{record.payType,jdbcType=INTEGER},</if>
        <if test="record.createdDate != null">#{record.createdDate,jdbcType=TIMESTAMP},</if>
        <if test="record.updatedDate != null">#{record.updatedDate,jdbcType=TIMESTAMP},</if>
    </sql>
    <sql id="Batch_Insert_Values">
 #{record.userId,jdbcType=BIGINT},
		 					 #{record.userName,jdbcType=VARCHAR},
		 					 #{record.bankCard,jdbcType=VARCHAR},
		 					 #{record.bankAddress,jdbcType=VARCHAR},
		 					 #{record.bankName,jdbcType=VARCHAR},
		 					 #{record.bankNo,jdbcType=VARCHAR},
		 					 #{record.alipayName,jdbcType=VARCHAR},
		 					 #{record.alipayCard,jdbcType=VARCHAR},
		 					 #{record.alipayReceivingImg,jdbcType=VARCHAR},
		 					 #{record.wechatPayName,jdbcType=VARCHAR},
		 					 #{record.wechatCard,jdbcType=VARCHAR},
		 					 #{record.wechatReceivingImg,jdbcType=VARCHAR},
		 					 #{record.status,jdbcType=INTEGER},
		 					 #{record.remarks,jdbcType=VARCHAR},
		 					 #{record.payType,jdbcType=INTEGER},
		 					 #{record.createdDate,jdbcType=TIMESTAMP},
		 					 #{record.updatedDate,jdbcType=TIMESTAMP},
		 	    </sql>
    <sql id="Batch_Insert_Values_On_DuplicateKey">
        #{record.id,jdbcType=BIGINT},
        <include refid="Batch_Insert_Values"/>
    </sql>
    <sql id="Update_Set_From_Bean">
        <if test="record.userId != null">user_id = #{record.userId,jdbcType=BIGINT} ,</if>
        <if test="record.userName != null">user_name = #{record.userName,jdbcType=VARCHAR} ,</if>
        <if test="record.bankCard != null">bank_card = #{record.bankCard,jdbcType=VARCHAR} ,</if>
        <if test="record.bankAddress != null">bank_address = #{record.bankAddress,jdbcType=VARCHAR} ,</if>
        <if test="record.bankName != null">bank_name = #{record.bankName,jdbcType=VARCHAR} ,</if>
        <if test="record.bankNo != null">bank_no = #{record.bankNo,jdbcType=VARCHAR} ,</if>
        <if test="record.alipayName != null">alipay_name = #{record.alipayName,jdbcType=VARCHAR} ,</if>
        <if test="record.alipayCard != null">alipay_card = #{record.alipayCard,jdbcType=VARCHAR} ,</if>
        <if test="record.alipayReceivingImg != null">alipay_receiving_img =
            #{record.alipayReceivingImg,jdbcType=VARCHAR} ,
        </if>
        <if test="record.wechatPayName != null">wechat_pay_name = #{record.wechatPayName,jdbcType=VARCHAR} ,</if>
        <if test="record.wechatCard != null">wechat_card = #{record.wechatCard,jdbcType=VARCHAR} ,</if>
        <if test="record.wechatReceivingImg != null">wechat_receiving_img =
            #{record.wechatReceivingImg,jdbcType=VARCHAR} ,
        </if>
        <if test="record.status != null">status = #{record.status,jdbcType=INTEGER} ,</if>
        <if test="record.remarks != null">remarks = #{record.remarks,jdbcType=VARCHAR} ,</if>
        <if test="record.payType != null">pay_type = #{record.payType,jdbcType=INTEGER} ,</if>
        <if test="record.createdDate != null">created_date = #{record.createdDate,jdbcType=TIMESTAMP} ,</if>
        <if test="record.updatedDate != null">updated_date = #{record.updatedDate,jdbcType=TIMESTAMP} ,</if>
    </sql>
    <!-- insert -->
    <insert id="insert" parameterType="java.util.Map">
        <selectKey resultType="java.lang.Long" keyProperty="record.id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into
        <include refid="Table_Name"/>
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <include refid="Insert_Columns"/>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <include refid="Insert_Values"/>
        </trim>
    </insert>
    <insert id="batchInsert" parameterType="java.util.Map">
        insert into
        <include refid="Table_Name"/>
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <include refid="Base_Column_List_Without_Id"/>
        </trim>
        values
        <foreach collection="records" item="record" index="index" separator=",">
            <trim prefix="(" suffix=")" suffixOverrides=",">
                <include refid="Batch_Insert_Values"/>
            </trim>
        </foreach>
    </insert>
    <insert id="batchInsertOnDuplicateKey" parameterType="java.util.Map">
        insert into
        <include refid="Table_Name"/>
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <include refid="Base_Column_List"/>
        </trim>
        values
        <foreach collection="records" item="record" index="index" separator=",">
            <trim prefix="(" suffix=")" suffixOverrides=",">
                <include refid="Batch_Insert_Values_On_DuplicateKey"/>
            </trim>
        </foreach>
        ON DUPLICATE KEY UPDATE
        user_id = VALUES(user_id) , user_name = VALUES(user_name) , bank_card = VALUES(bank_card) , bank_address =
        VALUES(bank_address) , bank_name = VALUES(bank_name) , bank_no = VALUES(bank_no) , alipay_name =
        VALUES(alipay_name) , alipay_card = VALUES(alipay_card) , alipay_receiving_img = VALUES(alipay_receiving_img) ,
        wechat_pay_name = VALUES(wechat_pay_name) , wechat_card = VALUES(wechat_card) , wechat_receiving_img =
        VALUES(wechat_receiving_img) , status = VALUES(status) , remarks = VALUES(remarks) , pay_type = VALUES(pay_type)
        , created_date = VALUES(created_date) , updated_date = VALUES(updated_date)
    </insert>
    <!-- end insert -->
    <!-- delete -->
    <delete id="deleteById" parameterType="java.util.Map">
        delete from
        <include refid="Table_Name"/>
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="java.util.Map">
        delete from
        <include refid="Table_Name"/>
        <if test="example != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <delete id="deleteIn" parameterType="java.util.Map">
        delete from
        <include refid="Table_Name"/>
        where id in
        <foreach collection="records" item="record" index="index" open="(" separator="," close=")">
            #{record.id,jdbcType=BIGINT}
        </foreach>
    </delete>
    <!-- end delete -->
    <!-- update -->
    <update id="updateById" parameterType="java.util.Map">
        update
        <include refid="Table_Name"/>
        <set>
            <include refid="Update_Set_From_Bean"/>
        </set>
        where id = #{record.id,jdbcType=BIGINT}
    </update>
    <update id="updateByExample" parameterType="java.util.Map">
        update
        <include refid="Table_Name"/>
        <set>
            <include refid="Update_Set_From_Bean"/>
        </set>
        <if test="example != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </update>
    <update id="batchUpdate" parameterType="java.util.Map">
        <foreach collection="records" item="record" index="index" open="" close="" separator=";">
            update
            <include refid="Table_Name"/>
            <set>
                <include refid="Update_Set_From_Bean"/>
            </set>
            where id=#{record.id,jdbcType=BIGINT}
        </foreach>
    </update>
    <!-- end update -->
    <!-- select -->
    <select id="selectById" resultMap="UserFiatSettingMap" parameterType="java.util.Map">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="Table_Name"/>
        where id = #{id,jdbcType=BIGINT}
    </select>
    <select id="selectByExample" resultMap="UserFiatSettingMap" parameterType="java.util.Map">
        select
        <if test="example != null and example.distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from
        <include refid="Table_Name"/>
        <if test="example != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="example != null and example.orderByClause != null">
            order by ${example.orderByClause}
        </if>
    </select>
    <select id="selectOneByExample" resultMap="UserFiatSettingMap" parameterType="java.util.Map">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="Table_Name"/>
        <if test="example != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="example != null and example.orderByClause != null">
            order by ${example.orderByClause}
        </if>
        limit 1
    </select>
    <select id="selectIn" resultMap="UserFiatSettingMap" parameterType="java.util.Map">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="Table_Name"/>
        where id IN
        <foreach collection="records" item="record" index="index" open="(" separator="," close=")">
            #{record.id,jdbcType=BIGINT}
        </foreach>
    </select>
    <select id="countByExample" resultType="java.lang.Integer" parameterType="java.util.Map">
        select count(*) as total from
        <include refid="Table_Name"/>
        <if test="example != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <select id="countByPager" resultType="java.lang.Integer" parameterType="java.util.Map">
        select count(*) as total from
        <include refid="Table_Name"/>
        <if test="example != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <select id="selectByPager" resultMap="UserFiatSettingMap" parameterType="java.util.Map">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="Table_Name"/>
        <if test="example != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="pager.sortItem != null and pager.sortItem != '' ">
            order by ${pager.sortItem} ${pager.sortType}
        </if>
        limit #{pager.startIndex} , #{pager.pageSize}
    </select>
    <!-- end select -->
    <!-- My Custom Interfaces -->
</mapper>
