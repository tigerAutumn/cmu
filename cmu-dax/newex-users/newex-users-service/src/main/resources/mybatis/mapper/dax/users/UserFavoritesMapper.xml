<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cc.newex.dax.users.data.UserFavoritesRepository">
    <!-- CodeBuilder Generated -->
    <resultMap id="UserProductFavoritesMap" type="cc.newex.dax.users.domain.UserFavorites">
        <id column="user_id" property="userId" jdbcType="BIGINT"/>
        <result column="product_ids" property="productIds" jdbcType="VARCHAR"/>
        <result column="broker_id" property="brokerId" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Table_Name">
    user_product_favorites
  </sql>
    <sql id="Base_Column_List_Without_Id">
    product_ids, broker_id
  </sql>
    <sql id="Base_Column_List">
        user_id,
        <include refid="Base_Column_List_Without_Id"/>
    </sql>
    <sql id="Insert_Columns">
        <if test="record.productIds != null">
            product_ids,
        </if>
        <if test="record.brokerId != null">
            broker_id,
        </if>
    </sql>
    <sql id="Insert_Values">
        <if test="record.productIds != null">
            #{record.productIds,jdbcType=VARCHAR},
        </if>
        <if test="record.brokerId != null">
            #{record.brokerId,jdbcType=INTEGER},
        </if>
    </sql>
    <sql id="Batch_Insert_Values">
    #{record.userId,jdbcType=BIGINT},
    #{record.productIds,jdbcType=VARCHAR},
    #{record.brokerId,jdbcType=INTEGER},
  </sql>
    <sql id="Batch_Insert_Values_On_DuplicateKey">
        #{record.userId,jdbcType=BIGINT},
        <include refid="Batch_Insert_Values"/>
    </sql>
    <sql id="Update_Set_From_Bean">
        <if test="record.userId != null">
            user_id = #{record.userId,jdbcType=BIGINT},
        </if>
        <if test="record.productIds != null">
            product_ids = #{record.productIds,jdbcType=VARCHAR},
        </if>
        <if test="record.brokerId != null">
            broker_id = #{record.brokerId,jdbcType=INTEGER},
        </if>
    </sql>
    <!-- insert -->

    <insert id="insert" parameterType="java.util.Map">
        insert into
        <include refid="Table_Name"/>
        <trim prefix="(" suffix=")" suffixOverrides=",">
            user_id,
            <include refid="Insert_Columns"/>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="record.userId != null">
                #{record.userId,jdbcType=BIGINT},
            </if>
            <include refid="Insert_Values"/>
        </trim>
    </insert>
    <insert id="batchInsert" parameterType="java.util.Map">
        insert into
        <include refid="Table_Name"/>
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <include refid="Base_Column_List_Without_Id"/>
        </trim>
        values
        <foreach collection="records" item="record" index="index" separator=",">
            <trim prefix="(" suffix=")" suffixOverrides=",">
                <include refid="Batch_Insert_Values"/>
            </trim>
        </foreach>
    </insert>
    <insert id="batchInsertOnDuplicateKey" parameterType="java.util.Map">
        insert into
        <include refid="Table_Name"/>
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <include refid="Base_Column_List"/>
        </trim>
        values
        <foreach collection="records" item="record" index="index" separator=",">
            <trim prefix="(" suffix=")" suffixOverrides=",">
                <include refid="Batch_Insert_Values_On_DuplicateKey"/>
            </trim>
        </foreach>
        ON DUPLICATE KEY UPDATE
        user_id = VALUES(user_id), product_ids = VALUES(product_ids), broker_id = VALUES(broker_id)
    </insert>
    <!-- end insert -->
    <!-- delete -->
    <delete id="deleteById" parameterType="java.util.Map">
        delete from
        <include refid="Table_Name"/>
        where user_id = #{userId,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="java.util.Map">
        delete from
        <include refid="Table_Name"/>
        <if test="example != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <delete id="deleteIn" parameterType="java.util.Map">
        delete from
        <include refid="Table_Name"/>
        where user_id in
        <foreach collection="records" item="record" index="index" open="(" separator="," close=")">
            #{record.userId,jdbcType=BIGINT}
        </foreach>
    </delete>
    <!-- end delete -->
    <!-- update -->
    <update id="updateById" parameterType="java.util.Map">
        update
        <include refid="Table_Name"/>
        <set>
            <include refid="Update_Set_From_Bean"/>
        </set>
        where user_id = #{record.userId,jdbcType=BIGINT} and broker_id = #{record.brokerId,jdbcType=INTEGER}
    </update>
    <update id="updateByExample" parameterType="java.util.Map">
        update
        <include refid="Table_Name"/>
        <set>
            <include refid="Update_Set_From_Bean"/>
        </set>
        <if test="example != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </update>
    <update id="batchUpdate" parameterType="java.util.Map">
        <foreach collection="records" item="record" index="index" open="" close="" separator=";">
            update
            <include refid="Table_Name"/>
            <set>
                <include refid="Update_Set_From_Bean"/>
            </set>
            where user_id = #{record.userId,jdbcType=BIGINT}
        </foreach>
    </update>
    <!-- end update -->
    <!-- select -->
    <select id="selectById" parameterType="java.util.Map" resultMap="UserProductFavoritesMap">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="Table_Name"/>
        where user_id = #{id,jdbcType=BIGINT}
    </select>
    <select id="selectByExample" resultMap="UserProductFavoritesMap" parameterType="java.util.Map">
        select
        <if test="example != null and example.distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from
        <include refid="Table_Name"/>
        <if test="example != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="example != null and example.orderByClause != null">
            order by ${example.orderByClause}
        </if>
    </select>
    <select id="selectOneByExample" resultMap="UserProductFavoritesMap" parameterType="java.util.Map">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="Table_Name"/>
        <if test="example != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="example != null and example.orderByClause != null">
            order by ${example.orderByClause}
        </if>
        limit 1
    </select>
    <select id="selectIn" resultMap="UserProductFavoritesMap" parameterType="java.util.Map">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="Table_Name"/>
        where user_id in
        <foreach collection="records" item="record" index="index" open="(" separator="," close=")">
            #{record.userId,jdbcType=BIGINT}
        </foreach>
    </select>
    <select id="countByExample" parameterType="java.util.Map" resultType="java.lang.Integer">
        select count(1) as total from
        <include refid="Table_Name"/>
        <if test="example != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <select id="countByPager" parameterType="java.util.Map" resultType="java.lang.Integer">
        select count(1) as total from
        <include refid="Table_Name"/>
        <if test="example != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <select id="selectByPager" resultMap="UserProductFavoritesMap" parameterType="java.util.Map">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="Table_Name"/>
        <if test="example != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="pager.sortItem != null and pager.sortItem != ''">
            order by ${pager.sortItem} ${pager.sortType}
        </if>
        limit #{pager.startIndex} , #{pager.pageSize}
    </select>
    <!-- end select -->
    <!-- My Custom Interfaces -->
</mapper>