<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cc.newex.dax.market.data.MinePoolShareDataRepository">
    <!-- CodeBuilder  Generated-->
    <resultMap id="MinePoolShareDataMap" type="cc.newex.dax.market.domain.MinePoolShareData">
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="pool_mode" property="poolMode" jdbcType="VARCHAR"/>
        <result column="market_share_of_pool" property="marketShareOfPool" jdbcType="DOUBLE"/>
        <result column="block_amount" property="blockAmount" jdbcType="INTEGER"/>
        <result column="empty_block_proportion" property="emptyBlockProportion" jdbcType="DOUBLE"/>
        <result column="avg_block_size" property="avgBlockSize" jdbcType="BIGINT"/>
        <result column="avg_block_miner_fee" property="avgBlockMinerFee" jdbcType="DOUBLE"/>
        <result column="miner_fee_and_block_bonus_proportion" property="minerFeeAndBlockBonusProportion"
                jdbcType="DOUBLE"/>
        <result column="rank" property="rank" jdbcType="TINYINT"/>
        <result column="computing_power" property="computingPower" jdbcType="VARCHAR"/>
        <result column="created_date" property="createdDate" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Table_Name">mine_pool_share_data</sql>
    <sql id="Base_Column_List_Without_Id">
        name , pool_mode , market_share_of_pool , block_amount , empty_block_proportion , avg_block_size ,
        avg_block_miner_fee , miner_fee_and_block_bonus_proportion , rank , computing_power , created_date
    </sql>
    <sql id="Base_Column_List">
        <include refid="Base_Column_List_Without_Id"/>
    </sql>
    <sql id="Insert_Columns">
        <if test="record.name != null">name,</if>
        <if test="record.poolMode != null">pool_mode,</if>
        <if test="record.marketShareOfPool != null">market_share_of_pool,</if>
        <if test="record.blockAmount != null">block_amount,</if>
        <if test="record.emptyBlockProportion != null">empty_block_proportion,</if>
        <if test="record.avgBlockSize != null">avg_block_size,</if>
        <if test="record.avgBlockMinerFee != null">avg_block_miner_fee,</if>
        <if test="record.minerFeeAndBlockBonusProportion != null">miner_fee_and_block_bonus_proportion,</if>
        <if test="record.rank != null">rank,</if>
        <if test="record.computingPower != null">computing_power,</if>
        <if test="record.createdDate != null">created_date,</if>
    </sql>
    <sql id="Insert_Values">
        <if test="record.name != null">#{record.name,jdbcType=VARCHAR},</if>
        <if test="record.poolMode != null">#{record.poolMode,jdbcType=VARCHAR},</if>
        <if test="record.marketShareOfPool != null">#{record.marketShareOfPool,jdbcType=DOUBLE},</if>
        <if test="record.blockAmount != null">#{record.blockAmount,jdbcType=INTEGER},</if>
        <if test="record.emptyBlockProportion != null">#{record.emptyBlockProportion,jdbcType=DOUBLE},</if>
        <if test="record.avgBlockSize != null">#{record.avgBlockSize,jdbcType=BIGINT},</if>
        <if test="record.avgBlockMinerFee != null">#{record.avgBlockMinerFee,jdbcType=DOUBLE},</if>
        <if test="record.minerFeeAndBlockBonusProportion != null">
            #{record.minerFeeAndBlockBonusProportion,jdbcType=DOUBLE},
        </if>
        <if test="record.rank != null">#{record.rank,jdbcType=TINYINT},</if>
        <if test="record.computingPower != null">#{record.computingPower,jdbcType=VARCHAR},</if>
        <if test="record.createdDate != null">#{record.createdDate,jdbcType=TIMESTAMP},</if>
    </sql>
    <sql id="Batch_Insert_Values">
        #{record.name,jdbcType=VARCHAR},
        #{record.poolMode,jdbcType=VARCHAR},
        #{record.marketShareOfPool,jdbcType=DOUBLE},
        #{record.blockAmount,jdbcType=INTEGER},
        #{record.emptyBlockProportion,jdbcType=DOUBLE},
        #{record.avgBlockSize,jdbcType=BIGINT},
        #{record.avgBlockMinerFee,jdbcType=DOUBLE},
        #{record.minerFeeAndBlockBonusProportion,jdbcType=DOUBLE},
        #{record.rank,jdbcType=TINYINT},
        #{record.computingPower,jdbcType=VARCHAR},
        #{record.createdDate,jdbcType=TIMESTAMP},
    </sql>
    <sql id="Batch_Insert_Values_On_DuplicateKey">
        <include refid="Batch_Insert_Values"/>
    </sql>
    <sql id="Update_Set_From_Bean">
        <if test="record.name != null">name = #{record.name,jdbcType=VARCHAR} ,</if>
        <if test="record.poolMode != null">pool_mode = #{record.poolMode,jdbcType=VARCHAR} ,</if>
        <if test="record.marketShareOfPool != null">market_share_of_pool = #{record.marketShareOfPool,jdbcType=DOUBLE}
            ,
        </if>
        <if test="record.blockAmount != null">block_amount = #{record.blockAmount,jdbcType=INTEGER} ,</if>
        <if test="record.emptyBlockProportion != null">empty_block_proportion =
            #{record.emptyBlockProportion,jdbcType=DOUBLE} ,
        </if>
        <if test="record.avgBlockSize != null">avg_block_size = #{record.avgBlockSize,jdbcType=BIGINT} ,</if>
        <if test="record.avgBlockMinerFee != null">avg_block_miner_fee = #{record.avgBlockMinerFee,jdbcType=DOUBLE} ,
        </if>
        <if test="record.minerFeeAndBlockBonusProportion != null">miner_fee_and_block_bonus_proportion =
            #{record.minerFeeAndBlockBonusProportion,jdbcType=DOUBLE} ,
        </if>
        <if test="record.rank != null">rank = #{record.rank,jdbcType=TINYINT} ,</if>
        <if test="record.computingPower != null">computing_power = #{record.computingPower,jdbcType=VARCHAR} ,</if>
        <if test="record.createdDate != null">created_date = #{record.createdDate,jdbcType=TIMESTAMP} ,</if>
    </sql>
    <!-- insert -->
    <insert id="insert" parameterType="java.util.Map">
        insert into
        <include refid="Table_Name"/>
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <include refid="Insert_Columns"/>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <include refid="Insert_Values"/>
        </trim>
    </insert>
    <insert id="batchInsert" parameterType="java.util.Map">
        insert into
        <include refid="Table_Name"/>
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <include refid="Base_Column_List_Without_Id"/>
        </trim>
        values
        <foreach collection="records" item="record" index="index" separator=",">
            <trim prefix="(" suffix=")" suffixOverrides=",">
                <include refid="Batch_Insert_Values"/>
            </trim>
        </foreach>
    </insert>
    <insert id="batchInsertOnDuplicateKey" parameterType="java.util.Map">
        insert into
        <include refid="Table_Name"/>
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <include refid="Base_Column_List"/>
        </trim>
        values
        <foreach collection="records" item="record" index="index" separator=",">
            <trim prefix="(" suffix=")" suffixOverrides=",">
                <include refid="Batch_Insert_Values_On_DuplicateKey"/>
            </trim>
        </foreach>
        ON DUPLICATE KEY UPDATE
        name = VALUES(name) , pool_mode = VALUES(pool_mode) , market_share_of_pool = VALUES(market_share_of_pool) ,
        block_amount = VALUES(block_amount) , empty_block_proportion = VALUES(empty_block_proportion) , avg_block_size =
        VALUES(avg_block_size) , avg_block_miner_fee = VALUES(avg_block_miner_fee) ,
        miner_fee_and_block_bonus_proportion = VALUES(miner_fee_and_block_bonus_proportion) , rank = VALUES(rank) ,
        computing_power = VALUES(computing_power) , created_date = VALUES(created_date)
    </insert>
    <!-- end insert -->
    <!-- delete -->
    <delete id="deleteById" parameterType="java.util.Map">
        delete from
        <include refid="Table_Name"/>
        where pool_mode = #{id,jdbcType=VARCHAR}
    </delete>
    <delete id="deleteByExample" parameterType="java.util.Map">
        delete from
        <include refid="Table_Name"/>
        <if test="example != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <delete id="deleteIn" parameterType="java.util.Map">
        delete from
        <include refid="Table_Name"/>
        where pool_mode in
        <foreach collection="records" item="record" index="index" open="(" separator="," close=")">
            #{record.poolMode,jdbcType=VARCHAR}
        </foreach>
    </delete>
    <!-- end delete -->
    <!-- update -->
    <update id="updateById" parameterType="java.util.Map">
        update
        <include refid="Table_Name"/>
        <set>
            <include refid="Update_Set_From_Bean"/>
        </set>
        where pool_mode = #{record.poolMode,jdbcType=VARCHAR}
    </update>
    <update id="updateByExample" parameterType="java.util.Map">
        update
        <include refid="Table_Name"/>
        <set>
            <include refid="Update_Set_From_Bean"/>
        </set>
        <if test="example != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </update>
    <update id="batchUpdate" parameterType="java.util.Map">
        <foreach collection="records" item="record" index="index" open="" close="" separator=";">
            update
            <include refid="Table_Name"/>
            <set>
                <include refid="Update_Set_From_Bean"/>
            </set>
            where pool_mode=#{record.poolMode,jdbcType=VARCHAR}
        </foreach>
    </update>
    <!-- end update -->
    <!-- select -->
    <select id="selectById" resultMap="MinePoolShareDataMap" parameterType="java.util.Map">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="Table_Name"/>
        where pool_mode = #{id,jdbcType=VARCHAR}
    </select>
    <select id="selectByExample" resultMap="MinePoolShareDataMap" parameterType="java.util.Map">
        select
        <if test="example != null and example.distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from
        <include refid="Table_Name"/>
        <if test="example != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="example != null and example.orderByClause != null">
            order by ${example.orderByClause}
        </if>
    </select>
    <select id="selectOneByExample" resultMap="MinePoolShareDataMap" parameterType="java.util.Map">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="Table_Name"/>
        <if test="example != null">
            <include refid="Example_Where_Clause"/>
        </if>
        limit 1
    </select>
    <select id="selectIn" resultMap="MinePoolShareDataMap" parameterType="java.util.Map">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="Table_Name"/>
        where pool_mode IN
        <foreach collection="records" item="record" index="index" open="(" separator="," close=")">
            #{record.poolMode,jdbcType=VARCHAR}
        </foreach>
    </select>
    <select id="countByExample" resultType="java.lang.Integer" parameterType="java.util.Map">
        select count(*) as total from
        <include refid="Table_Name"/>
        <if test="example != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <select id="countByPager" resultType="java.lang.Integer" parameterType="java.util.Map">
        select count(*) as total from
        <include refid="Table_Name"/>
        <if test="example != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <select id="selectByPager" resultMap="MinePoolShareDataMap" parameterType="java.util.Map">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="Table_Name"/>
        <if test="example != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="pager.sortItem != null and pager.sortItem != '' ">
            order by ${pager.sortItem} ${pager.sortType}
        </if>
        limit #{pager.startIndex} , #{pager.pageSize}
    </select>
    <select id="selectAll" resultMap="MinePoolShareDataMap">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="Table_Name"/>
    </select>

    <!-- end select -->
    <!-- My Custom Interfaces -->
</mapper>
