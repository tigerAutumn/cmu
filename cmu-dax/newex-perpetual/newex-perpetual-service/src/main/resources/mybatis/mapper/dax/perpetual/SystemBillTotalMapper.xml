<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cc.newex.dax.perpetual.data.SystemBillTotalRepository">
  <!-- CodeBuilder Generated -->
  <resultMap id="SystemBillTotalMap" type="cc.newex.dax.perpetual.domain.SystemBillTotal">
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="system_bill_id" property="systemBillId" jdbcType="BIGINT" />
    <result column="currency_code" property="currencyCode" jdbcType="VARCHAR" />
    <result column="fee" property="fee" jdbcType="DECIMAL" />
    <result column="profit" property="profit" jdbcType="DECIMAL" />
    <result column="user_balance" property="userBalance" jdbcType="DECIMAL" />
    <result column="position_size" property="positionSize" jdbcType="DECIMAL" />
    <result column="total_fee" property="totalFee" jdbcType="DECIMAL" />
    <result column="total_profit" property="totalProfit" jdbcType="DECIMAL" />
    <result column="base_adjust" property="baseAdjust" jdbcType="DECIMAL" />
    <result column="created_date" property="createdDate" jdbcType="TIMESTAMP" />
    <result column="modify_date" property="modifyDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" suffix=")" prefixOverrides="and">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Table_Name">
    system_bill_total
  </sql>
  <sql id="Base_Column_List_Without_Id">
    system_bill_id, currency_code, fee, profit, user_balance, position_size, total_fee, 
    total_profit, base_adjust, created_date, modify_date
  </sql>
  <sql id="Base_Column_List">
    id, 
    <include refid="Base_Column_List_Without_Id" />
  </sql>
  <sql id="Insert_Columns">
    <if test="record.systemBillId != null">
      system_bill_id,
    </if>
    <if test="record.currencyCode != null">
      currency_code,
    </if>
    <if test="record.fee != null">
      fee,
    </if>
    <if test="record.profit != null">
      profit,
    </if>
    <if test="record.userBalance != null">
      user_balance,
    </if>
    <if test="record.positionSize != null">
      position_size,
    </if>
    <if test="record.totalFee != null">
      total_fee,
    </if>
    <if test="record.totalProfit != null">
      total_profit,
    </if>
    <if test="record.baseAdjust != null">
      base_adjust,
    </if>
    <if test="record.createdDate != null">
      created_date,
    </if>
    <if test="record.modifyDate != null">
      modify_date,
    </if>
  </sql>
  <sql id="Insert_Values">
    <if test="record.systemBillId != null">
      #{record.systemBillId,jdbcType=BIGINT},
    </if>
    <if test="record.currencyCode != null">
      #{record.currencyCode,jdbcType=VARCHAR},
    </if>
    <if test="record.fee != null">
      #{record.fee,jdbcType=DECIMAL},
    </if>
    <if test="record.profit != null">
      #{record.profit,jdbcType=DECIMAL},
    </if>
    <if test="record.userBalance != null">
      #{record.userBalance,jdbcType=DECIMAL},
    </if>
    <if test="record.positionSize != null">
      #{record.positionSize,jdbcType=DECIMAL},
    </if>
    <if test="record.totalFee != null">
      #{record.totalFee,jdbcType=DECIMAL},
    </if>
    <if test="record.totalProfit != null">
      #{record.totalProfit,jdbcType=DECIMAL},
    </if>
    <if test="record.baseAdjust != null">
      #{record.baseAdjust,jdbcType=DECIMAL},
    </if>
    <if test="record.createdDate != null">
      #{record.createdDate,jdbcType=TIMESTAMP},
    </if>
    <if test="record.modifyDate != null">
      #{record.modifyDate,jdbcType=TIMESTAMP},
    </if>
  </sql>
  <sql id="Batch_Insert_Values">
    #{record.systemBillId,jdbcType=BIGINT},
    #{record.currencyCode,jdbcType=VARCHAR},
    #{record.fee,jdbcType=DECIMAL},
    #{record.profit,jdbcType=DECIMAL},
    #{record.userBalance,jdbcType=DECIMAL},
    #{record.positionSize,jdbcType=DECIMAL},
    #{record.totalFee,jdbcType=DECIMAL},
    #{record.totalProfit,jdbcType=DECIMAL},
    #{record.baseAdjust,jdbcType=DECIMAL},
    #{record.createdDate,jdbcType=TIMESTAMP},
    #{record.modifyDate,jdbcType=TIMESTAMP},
  </sql>
  <sql id="Batch_Insert_Values_On_DuplicateKey">
    #{record.id,jdbcType=BIGINT},
    <include refid="Batch_Insert_Values" />
  </sql>
  <sql id="Update_Set_From_Bean">
    <if test="record.systemBillId != null">
      system_bill_id = #{record.systemBillId,jdbcType=BIGINT},
    </if>
    <if test="record.currencyCode != null">
      currency_code = #{record.currencyCode,jdbcType=VARCHAR},
    </if>
    <if test="record.fee != null">
      fee = #{record.fee,jdbcType=DECIMAL},
    </if>
    <if test="record.profit != null">
      profit = #{record.profit,jdbcType=DECIMAL},
    </if>
    <if test="record.userBalance != null">
      user_balance = #{record.userBalance,jdbcType=DECIMAL},
    </if>
    <if test="record.positionSize != null">
      position_size = #{record.positionSize,jdbcType=DECIMAL},
    </if>
    <if test="record.totalFee != null">
      total_fee = #{record.totalFee,jdbcType=DECIMAL},
    </if>
    <if test="record.totalProfit != null">
      total_profit = #{record.totalProfit,jdbcType=DECIMAL},
    </if>
    <if test="record.baseAdjust != null">
      base_adjust = #{record.baseAdjust,jdbcType=DECIMAL},
    </if>
    <if test="record.createdDate != null">
      created_date = #{record.createdDate,jdbcType=TIMESTAMP},
    </if>
    <if test="record.modifyDate != null">
      modify_date = #{record.modifyDate,jdbcType=TIMESTAMP},
    </if>
  </sql>
  <!-- insert -->
  <insert id="insert" parameterType="java.util.Map">
    <selectKey resultType="java.lang.Long" keyProperty="record.id" order="AFTER">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into 
    <include refid="Table_Name" />
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <include refid="Insert_Columns" />
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <include refid="Insert_Values" />
    </trim>
  </insert>
  <insert id="batchInsert" parameterType="java.util.Map">
    insert into 
    <include refid="Table_Name" />
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <include refid="Base_Column_List_Without_Id" />
    </trim>
    values 
    <foreach collection="records" item="record" index="index" separator=",">
      <trim prefix="(" suffix=")" suffixOverrides=",">
        <include refid="Batch_Insert_Values" />
      </trim>
    </foreach>
  </insert>
  <insert id="batchInsertOnDuplicateKey" parameterType="java.util.Map">
    insert into 
    <include refid="Table_Name" />
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <include refid="Base_Column_List" />
    </trim>
    values 
    <foreach collection="records" item="record" index="index" separator=",">
      <trim prefix="(" suffix=")" suffixOverrides=",">
        <include refid="Batch_Insert_Values_On_DuplicateKey" />
      </trim>
    </foreach>
    ON DUPLICATE KEY UPDATE
    system_bill_id = VALUES(system_bill_id), currency_code = VALUES(currency_code), fee = VALUES(fee), profit = VALUES(profit), user_balance = VALUES(user_balance), position_size = VALUES(position_size), total_fee = VALUES(total_fee), total_profit = VALUES(total_profit), base_adjust = VALUES(base_adjust), created_date = VALUES(created_date), modify_date = VALUES(modify_date)
  </insert>
  <!-- end insert -->
  <!-- delete -->
  <delete id="deleteById" parameterType="java.util.Map">
    delete from 
    <include refid="Table_Name" />
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="java.util.Map">
    delete from 
    <include refid="Table_Name" />
    <if test="example != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <delete id="deleteIn" parameterType="java.util.Map">
    delete from 
    <include refid="Table_Name" />
    where id in 
    <foreach collection="records" item="record" index="index" open="(" separator="," close=")">
      #{record.id,jdbcType=BIGINT}
    </foreach>
  </delete>
  <!-- end delete -->
  <!-- update -->
  <update id="updateById" parameterType="java.util.Map">
    update 
    <include refid="Table_Name" />
    <set>
      <include refid="Update_Set_From_Bean" />
    </set>
    where id = #{record.id,jdbcType=BIGINT}
  </update>
  <update id="updateByExample" parameterType="java.util.Map">
    update 
    <include refid="Table_Name" />
    <set>
      <include refid="Update_Set_From_Bean" />
    </set>
    <if test="example != null">
      <include refid="Example_Where_Clause" />
    </if>
  </update>
  <update id="batchUpdate" parameterType="java.util.Map">
    <foreach collection="records" item="record" index="index" open="" close="" separator=";">
      update 
      <include refid="Table_Name" />
      <set>
        <include refid="Update_Set_From_Bean" />
      </set>
      where id = #{record.id,jdbcType=BIGINT}
    </foreach>
  </update>
  <!-- end update -->
  <!-- select -->
  <select id="selectById" parameterType="java.util.Map" resultMap="SystemBillTotalMap">
    select 
    <include refid="Base_Column_List" />
    from 
    <include refid="Table_Name" />
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectByExample" resultMap="SystemBillTotalMap" parameterType="java.util.Map">
    select
    <if test="example != null and example.distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from 
    <include refid="Table_Name" />
    <if test="example != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="example != null and example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
  </select>
  <select id="selectOneByExample" resultMap="SystemBillTotalMap" parameterType="java.util.Map">
    select
    <include refid="Base_Column_List" />
    from 
    <include refid="Table_Name" />
    <if test="example != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="example != null and example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectIn" resultMap="SystemBillTotalMap" parameterType="java.util.Map">
    select
    <include refid="Base_Column_List" />
    from 
    <include refid="Table_Name" />
    where id in 
    <foreach collection="records" item="record" index="index" open="(" separator="," close=")">
      #{record.id,jdbcType=BIGINT}
    </foreach>
  </select>
  <select id="countByExample" parameterType="java.util.Map" resultType="java.lang.Integer">
    select count(1) as total from 
    <include refid="Table_Name" />
    <if test="example != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <select id="countByPager" parameterType="java.util.Map" resultType="java.lang.Integer">
    select count(1) as total from 
    <include refid="Table_Name" />
    <if test="example != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <select id="selectByPager" resultMap="SystemBillTotalMap" parameterType="java.util.Map">
    select
    <include refid="Base_Column_List" />
    from 
    <include refid="Table_Name" />
    <if test="example != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="pager.sortItem != null and pager.sortItem != ''">
      order by ${pager.sortItem} ${pager.sortType}
    </if>
    limit #{pager.startIndex} , #{pager.pageSize}
  </select>
  <!-- end select -->
  <!-- My Custom Interfaces -->
</mapper>