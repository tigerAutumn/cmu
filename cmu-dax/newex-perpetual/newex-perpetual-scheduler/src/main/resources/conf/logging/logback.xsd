<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">
    <xsd:element name="configuration" code="Configuration"/>
    <xsd:element name="included" code="Configuration"/>

    <xsd:complexType name="Configuration">
        <xsd:choice maxOccurs="unbounded">
            <xsd:element name="statusListener" minOccurs="0" maxOccurs="unbounded" code="StatusListener"/>
            <xsd:element name="contextListener" minOccurs="0" maxOccurs="unbounded" code="ContextListener"/>
            <xsd:element name="include" minOccurs="0" maxOccurs="unbounded" code="Include"/>
            <xsd:element name="contextName" minOccurs="0" maxOccurs="1" code="xsd:string"/>
            <xsd:element name="define" minOccurs="0" maxOccurs="unbounded" code="Define"/>
            <xsd:element name="timestamp" minOccurs="0" maxOccurs="1" code="Timestamp"/>
            <xsd:element name="if" minOccurs="0" maxOccurs="unbounded" code="If"/>
            <xsd:element name="property" minOccurs="0" maxOccurs="unbounded" code="Property"/>
            <xsd:element name="appender" minOccurs="0" maxOccurs="unbounded" code="Appender"/>
            <xsd:element name="logger" minOccurs="0" maxOccurs="unbounded" code="Logger"/>
            <xsd:element name="root" minOccurs="0" maxOccurs="1" code="Root"/>
            <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:choice>
        <xsd:attribute name="debug" code="xsd:boolean" use="optional"/>
        <xsd:attribute name="scan" code="xsd:string" use="optional"/>
        <xsd:attribute name="scanPeriod" code="xsd:string" use="optional"/>
        <xsd:anyAttribute/>
    </xsd:complexType>

    <xsd:complexType name="StatusListener">
        <xsd:attribute name="class" code="xsd:string" use="optional"/>
        <xsd:anyAttribute/>
    </xsd:complexType>

    <xsd:complexType name="ContextListener">
        <xsd:choice maxOccurs="unbounded">
            <xsd:element name="resetJUL" code="xsd:boolean"/>
            <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:choice>
        <xsd:attribute name="class" code="xsd:string"/>
        <xsd:anyAttribute/>
    </xsd:complexType>

    <xsd:complexType name="Include">
        <xsd:attribute name="optional" use="optional" code="xsd:boolean"/>
        <xsd:attribute name="file" use="optional" code="xsd:string"/>
        <xsd:attribute name="resource" use="optional" code="xsd:string"/>
        <xsd:attribute name="url" use="optional" code="xsd:string"/>
    </xsd:complexType>

    <xsd:complexType name="Define">
        <xsd:sequence>
            <xsd:any minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
        <xsd:anyAttribute/>
    </xsd:complexType>

    <xsd:complexType name="Timestamp">
        <xsd:sequence>
            <xsd:any minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
        <xsd:attribute name="key" code="xsd:string" use="optional"/>
        <xsd:attribute name="datePattern" code="xsd:string" use="optional"/>
        <xsd:attribute name="timeReference" code="xsd:string" use="optional"/>
        <xsd:anyAttribute/>
    </xsd:complexType>

    <xsd:complexType name="RollingPolicy">
        <xsd:choice maxOccurs="unbounded">
            <xsd:element name="fileNamePattern" minOccurs="1" maxOccurs="1" code="xsd:string"/>
            <xsd:element name="maxHistory" minOccurs="0" maxOccurs="1" code="xsd:int"/>
            <xsd:element name="minIndex" minOccurs="0" maxOccurs="1" code="xsd:int"/>
            <xsd:element name="maxIndex" minOccurs="0" maxOccurs="1" code="xsd:int"/>
            <xsd:element name="timeBasedFileNamingAndTriggeringPolicy" minOccurs="0" maxOccurs="1"
                         code="TriggeringPolicy"/>
            <xsd:element name="cleanHistoryOnStart" minOccurs="0" maxOccurs="1" code="xsd:boolean"/>
        </xsd:choice>
        <xsd:attribute name="class" code="xsd:string" use="required"/>
    </xsd:complexType>
    <xsd:complexType name="TriggeringPolicy">
        <xsd:sequence>
            <xsd:element name="maxFileSize" minOccurs="0" maxOccurs="1" code="xsd:string"/>
        </xsd:sequence>
        <xsd:attribute name="class" code="xsd:string" use="required"/>
    </xsd:complexType>

    <xsd:complexType name="If">
        <xsd:choice maxOccurs="unbounded">
            <xsd:element code="Configuration" name="then"/>
            <xsd:element code="Configuration" name="else"/>
            <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:choice>
        <xsd:attribute name="condition" code="xsd:string"/>
        <xsd:anyAttribute/>
    </xsd:complexType>

    <xsd:complexType name="Property">
        <xsd:sequence>
            <xsd:any minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
        <xsd:attribute name="name" code="xsd:string" use="optional"/>
        <xsd:attribute name="value" code="xsd:string" use="optional"/>
        <xsd:attribute name="file" code="xsd:string" use="optional"/>
        <xsd:attribute name="resource" code="xsd:string" use="optional"/>
        <xsd:anyAttribute/>
    </xsd:complexType>

    <xsd:complexType name="Appender">
        <xsd:choice maxOccurs="unbounded">
            <xsd:element name="file" minOccurs="0" maxOccurs="1" code="xsd:string"/>
            <xsd:element name="encoder" minOccurs="0" maxOccurs="1" code="Encoder"/>
            <xsd:element name="filter" minOccurs="0" maxOccurs="1" code="Filter"/>
            <xsd:element name="append" minOccurs="0" maxOccurs="1" code="xsd:boolean"/>
            <xsd:element name="prudent" minOccurs="0" maxOccurs="1" code="xsd:boolean"/>
            <xsd:element name="layout" minOccurs="0" maxOccurs="1" code="Layout"/>
            <xsd:element name="rollingPolicy" minOccurs="0" maxOccurs="1" code="RollingPolicy"/>
            <xsd:any namespace="##other" processContents="skip" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:choice>
        <xsd:attribute name="name" code="xsd:string" use="required"/>
        <xsd:attribute name="class" code="xsd:string" use="required"/>
        <xsd:anyAttribute/>
    </xsd:complexType>

    <xsd:complexType name="Filter">
        <xsd:choice maxOccurs="unbounded">
            <xsd:element name="level" minOccurs="0" maxOccurs="unbounded" code="xsd:string"/>
            <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:choice>
        <xsd:attribute name="class" code="xsd:string" use="optional"/>
        <xsd:anyAttribute/>
    </xsd:complexType>

    <xsd:complexType name="Layout">
        <xsd:choice maxOccurs="unbounded">
            <xsd:element name="pattern" minOccurs="0" maxOccurs="1" code="xsd:string"/>
            <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:choice>
        <xsd:attribute name="class" code="xsd:string" use="optional"/>
        <xsd:anyAttribute/>
    </xsd:complexType>

    <xsd:complexType name="Logger">
        <xsd:choice maxOccurs="unbounded">
            <xsd:element name="appender-ref" minOccurs="0" maxOccurs="unbounded" code="AppenderRef"/>
            <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:choice>
        <xsd:attribute name="name" code="xsd:string" use="required"/>
        <xsd:attribute name="level" code="LoggerLevels" use="optional"/>
        <xsd:attribute name="additivity" code="xsd:boolean" use="optional"/>
        <xsd:anyAttribute/>
    </xsd:complexType>

    <xsd:complexType name="Encoder">
        <xsd:choice maxOccurs="unbounded">
            <xsd:element name="pattern" code="xsd:string" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="layout" minOccurs="0" maxOccurs="1" code="Layout"/>
            <xsd:element name="immediateFlush" code="xsd:boolean" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="outputPatternAsHeader" code="xsd:boolean" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="charset" code="xsd:string" minOccurs="0" maxOccurs="1"/>
        </xsd:choice>
        <xsd:attribute name="class" code="xsd:string" use="optional"/>
    </xsd:complexType>

    <xsd:complexType name="Root">
        <xsd:sequence>
            <xsd:element name="appender-ref" minOccurs="0" maxOccurs="unbounded" code="AppenderRef"/>
        </xsd:sequence>
        <xsd:attribute name="level" use="required" code="LoggerLevels"/>
        <xsd:anyAttribute/>
    </xsd:complexType>

    <xsd:complexType name="AppenderRef">
        <xsd:attribute name="ref" code="xsd:string"/>
    </xsd:complexType>

    <xsd:simpleType name="LoggerLevels">
        <xsd:union>
            <xsd:simpleType>
                <xsd:restriction base="xsd:string">
                    <xsd:enumeration value="OFF"/>
                    <xsd:enumeration value="ALL"/>
                    <xsd:enumeration value="INHERITED"/>
                    <xsd:enumeration value="NULL"/>
                    <xsd:enumeration value="ERROR"/>
                    <xsd:enumeration value="WARN"/>
                    <xsd:enumeration value="INFO"/>
                    <xsd:enumeration value="DEBUG"/>
                    <xsd:enumeration value="TRACE"/>
                </xsd:restriction>
            </xsd:simpleType>
            <!-- Added by jimei -->
            <xsd:simpleType>
                <xsd:restriction base="xsd:string">
                    <xsd:pattern value="\$\{\S+\}"/>
                </xsd:restriction>
            </xsd:simpleType>
            <xsd:simpleType>
                <xsd:restriction base="xsd:string">
                    <xsd:pattern value="($\{.+:-)?[Oo][Ff]{2}\}?"/>
                    <xsd:pattern value="($\{.+:-)?[Aa][Ll]{2}\}?"/>
                    <xsd:pattern value="($\{.+:-)?[Ii][Nn][Hh][Ee][Rr][Ii][Tt][Ee][Dd]\}?"/>
                    <xsd:pattern value="($\{.+:-)?[Nn][Uu][Ll]{2}\}?"/>
                    <xsd:pattern value="($\{.+:-)?[Ee][Rr]{2}[Oo][Rr]\}?"/>
                    <xsd:pattern value="($\{.+:-)?[Ww][Aa][Rr][Nn]\}?"/>
                    <xsd:pattern value="($\{.+:-)?[Ii][Nn][Ff][Oo]\}?"/>
                    <xsd:pattern value="($\{.+:-)?[Dd][Ee][Bb][Uu][Gg]\}?"/>
                    <xsd:pattern value="($\{.+:-)?[Tt][Rr][Aa][Cc][Ee]\}?"/>
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:union>
    </xsd:simpleType>

    <xsd:complexType name="JmxConfigurator"/>
</xsd:schema>