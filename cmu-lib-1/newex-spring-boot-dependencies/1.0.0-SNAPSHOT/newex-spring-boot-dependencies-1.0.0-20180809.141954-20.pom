<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.5.15.RELEASE</version>
    </parent>
    <groupId>cc.newex.commons</groupId>
    <artifactId>newex-spring-boot-dependencies</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>pom</packaging>
    <description>newex所有基于springboot开发的组件及应用的maven依赖包管理pom</description>
    <url>http://www.newex.cc</url>
    <properties>
        <newex-commons.version>1.0.0-SNAPSHOT</newex-commons.version>
        <spring-boot.version>1.5.15.RELEASE</spring-boot.version>
        <project.gitlab.group>https://git.cmx.com/newex-commons/</project.gitlab.group>
        <project.gitlab.url>git@git.cmx.com:newex-commons/newex-dependencies.git</project.gitlab.url>
        <java.version>1.8</java.version>
        <java.encoding>UTF-8</java.encoding>
        <scala.version>2.12.2</scala.version>
        <kotlin.version>1.2.31</kotlin.version>
        <spring-cloud.version>Edgware.SR4</spring-cloud.version>
        <lombok.version>1.16.20</lombok.version>
        <xxl-job-core.version>1.9.1</xxl-job-core.version>
        <!-- libphonenumber -->
        <com-googlecode-libphonenumber.version>8.9.6</com-googlecode-libphonenumber.version>
        <com-googlecode-geocoder.version>2.95</com-googlecode-geocoder.version>
        <com-googlecode-carrier.version>1.85</com-googlecode-carrier.version>
        <!--thymeleaf -->
        <thymeleaf-layout-dialect.version>2.1.2</thymeleaf-layout-dialect.version>
        <thymeleaf.version>3.0.5.RELEASE</thymeleaf.version>
        <!-- third-party spring boot starters -->
        <mybatis-spring-boot-starter.version>1.3.2</mybatis-spring-boot-starter.version>
        <spring-boot-admin.version>1.5.7</spring-boot-admin.version>
        <druid-spring-boot-starter.version>1.1.2</druid-spring-boot-starter.version>
        <spring-session.version>1.3.3.RELEASE</spring-session.version>
        <!-- apache commons -->
        <commons-codec.version>1.11</commons-codec.version>
        <commons-collections4.version>4.1</commons-collections4.version>
        <commons-lang3.version>3.7</commons-lang3.version>
        <commons-io.version>2.5</commons-io.version>
        <commons-logging.version>1.2</commons-logging.version>
        <commons-fileupload.version>1.3.3</commons-fileupload.version>
        <commons-compress.version>1.15</commons-compress.version>
        <commons-text.version>1.1</commons-text.version>
        <commons-httpclient.version>3.1</commons-httpclient.version>
        <commons-crypto.version>1.0.0</commons-crypto.version>
        <modelmapper.version>1.1.1</modelmapper.version>
        <!-- db -->
        <c3p0.version>0.9.5.2</c3p0.version>
        <druid.version>1.1.9</druid.version>
        <mybatis.version>3.4.6</mybatis.version>
        <mybatis-spring.version>1.3.2</mybatis-spring.version>
        <lettuce4.version>4.4.5.Final</lettuce4.version>
        <lettuce5.version>5.0.1.RELEASE</lettuce5.version>
        <xmemcached.version>2.4.0</xmemcached.version>
        <fakepath-xmemcached.verion>2.0.0</fakepath-xmemcached.verion>
        <hikaricp.version>3.1.0</hikaricp.version>
        <!-- json & text -->
        <fastjson.version>1.2.47</fastjson.version>
        <jjwt.version>0.9.0</jjwt.version>
        <java-jwt.version>3.2.0</java-jwt.version>
        <gson.version>2.8.4</gson.version>
        <!-- shiro -->
        <shiro.version>1.3.2</shiro.version>
        <!-- utils -->
        <guava.version>25.0-jre</guava.version>
        <velocity.version>1.7</velocity.version>
        <quartz.version>2.2.3</quartz.version>
        <netty-all.version>4.1.25.Final</netty-all.version>
        <poi.version>3.17</poi.version>
        <disruptor.version>3.4.2</disruptor.version>
        <okhttp.version>3.10.0</okhttp.version>
        <unirest-java.version>1.4.9</unirest-java.version>
        <fluent-hc.version>4.5.3</fluent-hc.version>
        <janino.version>3.0.8</janino.version>
        <jsoup.version>1.11.3</jsoup.version>
        <googleauth.version>1.1.5</googleauth.version>
        <!-- swagger -->
        <swagger-ui.version>3.14.2</swagger-ui.version>
        <swagger-jersey2-jaxrs.version>1.5.19</swagger-jersey2-jaxrs.version>
        <springfox-swagger.version>2.8.0</springfox-swagger.version>
        <!-- aliyun -->
        <aliyun-java-sdk-core.version>3.2.2</aliyun-java-sdk-core.version>
        <aliyun-java-sdk-vod.version>2.2.0</aliyun-java-sdk-vod.version>
        <aliyun-sdk-oss.version>2.7.0</aliyun-sdk-oss.version>
        <aliyun-ons-client.version>1.7.0.Final</aliyun-ons-client.version>
        <aliyun-java-sdk-kms.version>2.3.1</aliyun-java-sdk-kms.version>
        <!-- aws-java-sdk-bom -->
        <aws-java-sdk-bom.version>1.11.368</aws-java-sdk-bom.version>
        <!-- xss -->
        <owasp-encoder.version>1.2.1</owasp-encoder.version>
        <!-- test -->
        <powermock.version>1.7.4</powermock.version>
        <rest-assured.version>3.1.0</rest-assured.version>
        <system-rules.version>1.17.2</system-rules.version>
        <!-- plugins -->
        <maven-plugin-docker-spotify.version>1.0.0</maven-plugin-docker-spotify.version>
        <maven-plugin-scala.version>3.3.1</maven-plugin-scala.version>
        <maven-plugin-versions.version>2.5</maven-plugin-versions.version>
        <dockerfile-maven-version>1.4.0</dockerfile-maven-version>
        <!-- docker -->
        <docker.registry>registry-vpc.cn-beijing.aliyuncs.com</docker.registry>
        <docker.image.prefix>newex</docker.image.prefix>
        <docker.image.name>${project.artifactId}</docker.image.name>
        <docker.image.tag>${project.version}</docker.image.tag>
    </properties>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.xuxueli</groupId>
                <artifactId>xxl-job-core</artifactId>
                <version>${xxl-job-core.version}</version>
            </dependency>
            <!-- newex commons jars -->
            <dependency>
                <groupId>cc.newex.commons</groupId>
                <artifactId>newex-mybatis</artifactId>
                <version>${newex-commons.version}</version>
            </dependency>
            <dependency>
                <groupId>cc.newex.commons</groupId>
                <artifactId>newex-report-engine</artifactId>
                <version>${newex-commons.version}</version>
            </dependency>
            <dependency>
                <groupId>cc.newex.commons</groupId>
                <artifactId>newex-report-queryer</artifactId>
                <version>${newex-commons.version}</version>
            </dependency>
            <dependency>
                <groupId>cc.newex.commons</groupId>
                <artifactId>newex-lang</artifactId>
                <version>${newex-commons.version}</version>
            </dependency>
            <dependency>
                <groupId>cc.newex.commons</groupId>
                <artifactId>newex-spring-support</artifactId>
                <version>${newex-commons.version}</version>
            </dependency>
            <dependency>
                <groupId>cc.newex.commons</groupId>
                <artifactId>newex-dictionary</artifactId>
                <version>${newex-commons.version}</version>
            </dependency>
            <dependency>
                <groupId>cc.newex.commons</groupId>
                <artifactId>newex-memcached</artifactId>
                <version>${newex-commons.version}</version>
            </dependency>
            <dependency>
                <groupId>cc.newex.commons</groupId>
                <artifactId>newex-fileupload</artifactId>
                <version>${newex-commons.version}</version>
            </dependency>
            <dependency>
                <groupId>cc.newex.commons</groupId>
                <artifactId>newex-security</artifactId>
                <version>${newex-commons.version}</version>
            </dependency>
            <dependency>
                <groupId>cc.newex.commons</groupId>
                <artifactId>newex-security-jwt</artifactId>
                <version>${newex-commons.version}</version>
            </dependency>
            <dependency>
                <groupId>cc.newex.commons</groupId>
                <artifactId>newex-openapi-specs</artifactId>
                <version>${newex-commons.version}</version>
            </dependency>
            <dependency>
                <groupId>cc.newex.commons</groupId>
                <artifactId>newex-openapi-support</artifactId>
                <version>${newex-commons.version}</version>
            </dependency>
            <dependency>
                <groupId>cc.newex.commons</groupId>
                <artifactId>newex-kms-client</artifactId>
                <version>${newex-commons.version}</version>
            </dependency>
            <dependency>
                <groupId>cc.newex.commons</groupId>
                <artifactId>newex-spring-cloud-config-client</artifactId>
                <version>${newex-commons.version}</version>
            </dependency>
            <dependency>
                <groupId>cc.newex.commons</groupId>
                <artifactId>newex-kms-spring-cloud-config</artifactId>
                <version>${newex-commons.version}</version>
            </dependency>
            <dependency>
                <groupId>cc.newex.commons</groupId>
                <artifactId>newex-ucenter-support</artifactId>
                <version>${newex-commons.version}</version>
            </dependency>
            <dependency>
                <groupId>cc.newex.commons</groupId>
                <artifactId>newex-ratelimiter</artifactId>
                <version>${newex-commons.version}</version>
            </dependency>
            <!-- spring-cloud -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- aws sdk bom -->
            <dependency>
                <groupId>com.amazonaws</groupId>
                <artifactId>aws-java-sdk-bom</artifactId>
                <version>${aws-java-sdk-bom.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- googlecode libphonenumber -->
            <dependency>
                <groupId>com.googlecode.libphonenumber</groupId>
                <artifactId>carrier</artifactId>
                <version>${com-googlecode-carrier.version}</version>
            </dependency>
            <dependency>
                <groupId>com.googlecode.libphonenumber</groupId>
                <artifactId>geocoder</artifactId>
                <version>${com-googlecode-geocoder.version}</version>
            </dependency>
            <dependency>
                <groupId>com.googlecode.libphonenumber</groupId>
                <artifactId>libphonenumber</artifactId>
                <version>${com-googlecode-libphonenumber.version}</version>
            </dependency>
            <!--  spring boot or third-party's starters -->
            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>${mybatis-spring-boot-starter.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-starter</artifactId>
                <version>${druid-spring-boot-starter.version}</version>
            </dependency>
            <!-- spring boot admin -->
            <dependency>
                <groupId>de.codecentric</groupId>
                <artifactId>spring-boot-admin-server</artifactId>
                <version>${spring-boot-admin.version}</version>
            </dependency>
            <dependency>
                <groupId>de.codecentric</groupId>
                <artifactId>spring-boot-admin-server-ui</artifactId>
                <version>${spring-boot-admin.version}</version>
            </dependency>
            <dependency>
                <groupId>de.codecentric</groupId>
                <artifactId>spring-boot-admin-starter-client</artifactId>
                <version>${spring-boot-admin.version}</version>
            </dependency>
            <dependency>
                <groupId>de.codecentric</groupId>
                <artifactId>spring-boot-admin-server-ui-hystrix</artifactId>
                <version>${spring-boot-admin.version}</version>
            </dependency>
            <dependency>
                <groupId>de.codecentric</groupId>
                <artifactId>spring-boot-admin-server-ui-turbine</artifactId>
                <version>${spring-boot-admin.version}</version>
            </dependency>
            <dependency>
                <groupId>de.codecentric</groupId>
                <artifactId>spring-boot-admin-server-ui-activiti</artifactId>
                <version>${spring-boot-admin.version}</version>
            </dependency>
            <dependency>
                <groupId>de.codecentric</groupId>
                <artifactId>spring-boot-admin-server-ui-login</artifactId>
                <version>${spring-boot-admin.version}</version>
            </dependency>
            <!-- apache commons -->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-collections4</artifactId>
                <version>${commons-collections4.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons-lang3.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons-io.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-logging</groupId>
                <artifactId>commons-logging</artifactId>
                <version>${commons-logging.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-fileupload</groupId>
                <artifactId>commons-fileupload</artifactId>
                <version>${commons-fileupload.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-compress</artifactId>
                <version>${commons-compress.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-text</artifactId>
                <version>${commons-text.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-crypto</artifactId>
                <version>${commons-crypto.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-httpclient</groupId>
                <artifactId>commons-httpclient</artifactId>
                <version>${commons-httpclient.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modelmapper</groupId>
                <artifactId>modelmapper</artifactId>
                <version>${modelmapper.version}</version>
            </dependency>
            <!-- db -->
            <dependency>
                <groupId>com.mchange</groupId>
                <artifactId>c3p0</artifactId>
                <version>${c3p0.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid</artifactId>
                <version>${druid.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mybatis</groupId>
                <artifactId>mybatis</artifactId>
                <version>${mybatis.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mybatis</groupId>
                <artifactId>mybatis-spring</artifactId>
                <version>${mybatis-spring.version}</version>
            </dependency>
            <dependency>
                <groupId>com.h2database</groupId>
                <artifactId>h2</artifactId>
                <version>${h2.version}</version>
            </dependency>
            <dependency>
                <groupId>biz.paluch.redis</groupId>
                <artifactId>lettuce</artifactId>
                <version>${lettuce4.version}</version>
            </dependency>
            <dependency>
                <groupId>io.lettuce</groupId>
                <artifactId>lettuce-core</artifactId>
                <version>${lettuce5.version}</version>
            </dependency>
            <!-- Text & JSON-->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson.version}</version>
            </dependency>
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt</artifactId>
                <version>${jjwt.version}</version>
            </dependency>
            <dependency>
                <groupId>com.auth0</groupId>
                <artifactId>java-jwt</artifactId>
                <version>${java-jwt.version}</version>
            </dependency>
            <dependency>
                <groupId>com.googlecode.xmemcached</groupId>
                <artifactId>xmemcached</artifactId>
                <version>${xmemcached.version}</version>
            </dependency>
            <dependency>
                <groupId>fakepath</groupId>
                <artifactId>xmemcached</artifactId>
                <version>${fakepath-xmemcached.verion}</version>
            </dependency>
            <dependency>
                <groupId>com.google.code.gson</groupId>
                <artifactId>gson</artifactId>
                <version>${gson.version}</version>
            </dependency>
            <!-- shiro security -->
            <dependency>
                <groupId>org.apache.shiro</groupId>
                <artifactId>shiro-core</artifactId>
                <version>${shiro.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.shiro</groupId>
                <artifactId>shiro-web</artifactId>
                <version>${shiro.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.shiro</groupId>
                <artifactId>shiro-spring</artifactId>
                <version>${shiro.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.shiro</groupId>
                <artifactId>shiro-quartz</artifactId>
                <version>${shiro.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.shiro</groupId>
                <artifactId>shiro-aspectj</artifactId>
                <version>${shiro.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.shiro</groupId>
                <artifactId>shiro-ehcache</artifactId>
                <version>${shiro.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.shiro</groupId>
                <artifactId>shiro-cas</artifactId>
                <version>${shiro.version}</version>
            </dependency>
            <!-- utils -->
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.velocity</groupId>
                <artifactId>velocity</artifactId>
                <version>${velocity.version}</version>
            </dependency>
            <dependency>
                <groupId>org.quartz-scheduler</groupId>
                <artifactId>quartz</artifactId>
                <version>${quartz.version}</version>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-all</artifactId>
                <version>${netty-all.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi</artifactId>
                <version>${poi.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi-ooxml-schemas</artifactId>
                <version>${poi.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi-scratchpad</artifactId>
                <version>${poi.version}</version>
            </dependency>
            <dependency>
                <groupId>com.lmax</groupId>
                <artifactId>disruptor</artifactId>
                <version>${disruptor.version}</version>
            </dependency>
            <dependency>
                <groupId>com.squareup.okhttp3</groupId>
                <artifactId>okhttp</artifactId>
                <version>${okhttp.version}</version>
            </dependency>
            <dependency>
                <groupId>com.mashape.unirest</groupId>
                <artifactId>unirest-java</artifactId>
                <version>${unirest-java.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>fluent-hc</artifactId>
                <version>${fluent-hc.version}</version>
            </dependency>
            <dependency>
                <groupId>org.codehaus.janino</groupId>
                <artifactId>janino</artifactId>
                <version>${janino.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jsoup</groupId>
                <artifactId>jsoup</artifactId>
                <version>${jsoup.version}</version>
            </dependency>
            <dependency>
                <groupId>com.warrenstrange</groupId>
                <artifactId>googleauth</artifactId>
                <version>${googleauth.version}</version>
            </dependency>
            <!-- swagger for spring boot jersey -->
            <dependency>
                <groupId>io.swagger</groupId>
                <artifactId>swagger-jersey2-jaxrs</artifactId>
                <version>${swagger-jersey2-jaxrs.version}</version>
            </dependency>
            <dependency>
                <groupId>org.webjars</groupId>
                <artifactId>swagger-ui</artifactId>
                <version>${swagger-ui.version}</version>
            </dependency>
            <!-- swagger for spring mvc / spring boot -->
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger2</artifactId>
                <version>${springfox-swagger.version}</version>
            </dependency>
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger-ui</artifactId>
                <version>${springfox-swagger.version}</version>
            </dependency>
            <!-- aliyun -->
            <dependency>
                <groupId>com.aliyun</groupId>
                <artifactId>aliyun-java-sdk-core</artifactId>
                <version>${aliyun-java-sdk-core.version}</version>
            </dependency>
            <dependency>
                <groupId>com.aliyun</groupId>
                <artifactId>aliyun-java-sdk-vod</artifactId>
                <version>${aliyun-java-sdk-vod.version}</version>
            </dependency>
            <dependency>
                <groupId>com.aliyun.oss</groupId>
                <artifactId>aliyun-sdk-oss</artifactId>
                <version>${aliyun-sdk-oss.version}</version>
            </dependency>
            <dependency>
                <groupId>com.aliyun.openservices</groupId>
                <artifactId>ons-client</artifactId>
                <version>${aliyun-ons-client.version}</version>
            </dependency>
            <dependency>
                <groupId>com.aliyun</groupId>
                <artifactId>aliyun-java-sdk-kms</artifactId>
                <version>${aliyun-java-sdk-kms.version}</version>
            </dependency>
            <!-- xss -->
            <dependency>
                <groupId>org.owasp.encoder</groupId>
                <artifactId>encoder</artifactId>
                <version>${owasp-encoder.version}</version>
            </dependency>
            <dependency>
                <groupId>org.owasp.encoder</groupId>
                <artifactId>encoder-jsp</artifactId>
                <version>${owasp-encoder.version}</version>
            </dependency>
            <!-- scala -->
            <dependency>
                <groupId>org.scala-lang</groupId>
                <artifactId>scala-library</artifactId>
                <version>${scala.version}</version>
            </dependency>
            <!-- kotlin -->
            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-stdlib-jdk8</artifactId>
                <version>${kotlin.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-reflect</artifactId>
                <version>${kotlin.version}</version>
            </dependency>
            <!-- test -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-test</artifactId>
                <version>${spring-boot.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.powermock</groupId>
                <artifactId>powermock-module-junit4</artifactId>
                <version>${powermock.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.powermock</groupId>
                <artifactId>powermock-module-junit4-rule</artifactId>
                <version>${powermock.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.powermock</groupId>
                <artifactId>powermock-api-mockito</artifactId>
                <version>${powermock.version}</version>
                <scope>test</scope>
                <exclusions>
                    <exclusion>
                        <artifactId>hamcrest-core</artifactId>
                        <groupId>org.hamcrest</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>mockito-core</artifactId>
                        <groupId>org.mockito</groupId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>com.github.stefanbirkner</groupId>
                <artifactId>system-rules</artifactId>
                <version>${system-rules.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.jayway.restassured</groupId>
                <artifactId>rest-assured</artifactId>
                <version>${rest-assured.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-test-junit</artifactId>
                <version>${kotlin.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${maven-resources-plugin.version}</version>
                    <dependencies>
                        <dependency>
                            <groupId>org.apache.maven.shared</groupId>
                            <artifactId>maven-filtering</artifactId>
                            <version>3.1.1</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <configuration>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                        <encoding>${java.encoding}</encoding>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>attach-source</id>
                            <phase>package</phase>
                            <goals>
                                <goal>jar-no-fork</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>${maven-javadoc-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>attach-javadoc</id>
                            <phase>package</phase>
                            <goals>
                                <goal>jar</goal>
                            </goals>
                            <configuration>
                                <additionalparam>-Xdoclint:none</additionalparam>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>net.alchim31.maven</groupId>
                    <artifactId>scala-maven-plugin</artifactId>
                    <version>${maven-plugin-scala.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>compile</goal>
                                <goal>testCompile</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <args>
                            <arg>-target:jvm-${java.version}</arg>
                        </args>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>versions-maven-plugin</artifactId>
                    <version>${maven-plugin-versions.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>add-source</id>
                            <phase>generate-sources</phase>
                            <goals>
                                <goal>add-source</goal>
                            </goals>
                            <configuration>
                                <sources>
                                    <source>${project.basedir}/src/main/kotlin</source>
                                    <source>${project.basedir}/src/test/kotlin</source>
                                    <source>${project.basedir}/src/main/scala</source>
                                    <source>${project.basedir}/src/test/scala</source>
                                </sources>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <artifactId>kotlin-maven-plugin</artifactId>
                    <groupId>org.jetbrains.kotlin</groupId>
                    <version>${kotlin.version}</version>
                    <executions>
                        <execution>
                            <id>compile</id>
                            <phase>compile</phase>
                            <goals>
                                <goal>compile</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>test-compile</id>
                            <phase>test-compile</phase>
                            <goals>
                                <goal>test-compile</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>com.spotify</groupId>
                    <artifactId>dockerfile-maven-plugin</artifactId>
                    <version>${dockerfile-maven-version}</version>
                    <!-- <executions>
                        <execution>
                            <id>default</id>
                            <goals>
                                <goal>build</goal>
                                <goal>push</goal>
                            </goals>
                        </execution>
                    </executions> -->
                    <configuration>
                        <useMavenSettingsForAuth>true</useMavenSettingsForAuth>
                        <contextDirectory>${project.build.directory}</contextDirectory>
                        <repository>${docker.registry}/${docker.image.prefix}/${docker.image.name}</repository>
                        <tag>${docker.image.tag}</tag>
                        <buildArgs>
                            <JAR_FILE>${project.build.finalName}.jar</JAR_FILE>
                        </buildArgs>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
    <inceptionYear>2017</inceptionYear>
    <developers>
        <developer>
            <id>newex-team</id>
            <name>newex-team</name>
            <email>newex-team@newex.cc</email>
            <roles>
                <role>architect</role>
                <role>developer</role>
            </roles>
            <url>http://www.newex.cc</url>
            <organization>newex</organization>
            <organizationUrl>http://www.newex.cc</organizationUrl>
            <timezone>+8</timezone>
        </developer>
    </developers>
    <scm>
        <connection>${project.gitlab.url}</connection>
        <developerConnection>${project.gitlab.url}</developerConnection>
        <url>${project.gitlab.group}</url>
    </scm>
    <organization>
        <name>newex Inc.</name>
        <url>http://www.newex.cc/</url>
    </organization>
    <distributionManagement>
        <repository>
            <id>cmx-releases</id>
            <name>Nexus Release Repository</name>
            <url>http://nexus.cmx.com/nexus/content/repositories/releases/</url>
        </repository>
        <snapshotRepository>
            <id>cmx-snapshots</id>
            <name>Nexus Snapshot Repository</name>
            <url>http://nexus.cmx.com/nexus/content/repositories/snapshots/</url>
        </snapshotRepository>
    </distributionManagement>
</project>
